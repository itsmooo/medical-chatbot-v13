"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/@react-pdf+font@4.0.2";
exports.ids = ["vendor-chunks/@react-pdf+font@4.0.2"];
exports.modules = {

/***/ "(ssr)/./node_modules/.pnpm/@react-pdf+font@4.0.2/node_modules/@react-pdf/font/lib/index.js":
/*!********************************************************************************************!*\
  !*** ./node_modules/.pnpm/@react-pdf+font@4.0.2/node_modules/@react-pdf/font/lib/index.js ***!
  \********************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ FontStore)\n/* harmony export */ });\n/* harmony import */ var is_url__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! is-url */ \"(ssr)/./node_modules/.pnpm/is-url@1.2.4/node_modules/is-url/index.js\");\n/* harmony import */ var fontkit__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! fontkit */ \"(ssr)/./node_modules/.pnpm/fontkit@2.0.4/node_modules/fontkit/dist/module.mjs\");\n/* harmony import */ var _react_pdf_pdfkit__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @react-pdf/pdfkit */ \"(ssr)/./node_modules/.pnpm/@react-pdf+pdfkit@4.0.3/node_modules/@react-pdf/pdfkit/lib/pdfkit.js\");\n\n\n\n\n// @ts-expect-error ts being silly\nconst STANDARD_FONTS = [\n    'Courier',\n    'Courier-Bold',\n    'Courier-Oblique',\n    'Courier-BoldOblique',\n    'Helvetica',\n    'Helvetica-Bold',\n    'Helvetica-Oblique',\n    'Helvetica-BoldOblique',\n    'Times-Roman',\n    'Times-Bold',\n    'Times-Italic',\n    'Times-BoldItalic',\n];\nclass StandardFont {\n    name;\n    src;\n    fullName;\n    familyName;\n    subfamilyName;\n    postscriptName;\n    copyright;\n    version;\n    underlinePosition;\n    underlineThickness;\n    italicAngle;\n    bbox;\n    'OS/2';\n    hhea;\n    numGlyphs;\n    characterSet;\n    availableFeatures;\n    type;\n    constructor(src) {\n        this.name = src;\n        this.fullName = src;\n        this.familyName = src;\n        this.subfamilyName = src;\n        this.type = 'STANDARD';\n        this.postscriptName = src;\n        this.availableFeatures = [];\n        this.copyright = '';\n        this.version = 1;\n        this.underlinePosition = -100;\n        this.underlineThickness = 50;\n        this.italicAngle = 0;\n        this.bbox = {};\n        this['OS/2'] = {};\n        this.hhea = {};\n        this.numGlyphs = 0;\n        this.characterSet = [];\n        this.src = _react_pdf_pdfkit__WEBPACK_IMPORTED_MODULE_2__.PDFFont.open(null, src);\n    }\n    encode(str) {\n        return this.src.encode(str);\n    }\n    layout(str) {\n        const [encoded, positions] = this.encode(str);\n        const glyphs = encoded.map((g, i) => {\n            const glyph = this.getGlyph(parseInt(g, 16));\n            glyph.advanceWidth = positions[i].advanceWidth;\n            return glyph;\n        });\n        const advanceWidth = positions.reduce((acc, p) => acc + p.advanceWidth, 0);\n        return {\n            positions,\n            stringIndices: positions.map((_, i) => i),\n            glyphs,\n            script: 'latin',\n            language: 'dflt',\n            direction: 'ltr',\n            features: {},\n            advanceWidth,\n            advanceHeight: 0,\n            bbox: undefined,\n        };\n    }\n    glyphForCodePoint(codePoint) {\n        const glyph = this.getGlyph(codePoint);\n        glyph.advanceWidth = 400;\n        return glyph;\n    }\n    getGlyph(id) {\n        return {\n            id,\n            codePoints: [id],\n            isLigature: false,\n            name: this.src.font.characterToGlyph(id),\n            _font: this.src,\n            // @ts-expect-error assign proper value\n            advanceWidth: undefined,\n        };\n    }\n    hasGlyphForCodePoint(codePoint) {\n        return this.src.font.characterToGlyph(codePoint) !== '.notdef';\n    }\n    // Based on empirical observation\n    get ascent() {\n        return 900;\n    }\n    // Based on empirical observation\n    get capHeight() {\n        switch (this.name) {\n            case 'Times-Roman':\n            case 'Times-Bold':\n            case 'Times-Italic':\n            case 'Times-BoldItalic':\n                return 650;\n            case 'Courier':\n            case 'Courier-Bold':\n            case 'Courier-Oblique':\n            case 'Courier-BoldOblique':\n                return 550;\n            default:\n                return 690;\n        }\n    }\n    // Based on empirical observation\n    get xHeight() {\n        switch (this.name) {\n            case 'Times-Roman':\n            case 'Times-Bold':\n            case 'Times-Italic':\n            case 'Times-BoldItalic':\n                return 440;\n            case 'Courier':\n            case 'Courier-Bold':\n            case 'Courier-Oblique':\n            case 'Courier-BoldOblique':\n                return 390;\n            default:\n                return 490;\n        }\n    }\n    // Based on empirical observation\n    get descent() {\n        switch (this.name) {\n            case 'Times-Roman':\n            case 'Times-Bold':\n            case 'Times-Italic':\n            case 'Times-BoldItalic':\n                return -220;\n            case 'Courier':\n            case 'Courier-Bold':\n            case 'Courier-Oblique':\n            case 'Courier-BoldOblique':\n                return -230;\n            default:\n                return -200;\n        }\n    }\n    get lineGap() {\n        return 0;\n    }\n    get unitsPerEm() {\n        return 1000;\n    }\n    stringsForGlyph() {\n        throw new Error('Method not implemented.');\n    }\n    glyphsForString() {\n        throw new Error('Method not implemented.');\n    }\n    widthOfGlyph() {\n        throw new Error('Method not implemented.');\n    }\n    getAvailableFeatures() {\n        throw new Error('Method not implemented.');\n    }\n    createSubset() {\n        throw new Error('Method not implemented.');\n    }\n    getVariation() {\n        throw new Error('Method not implemented.');\n    }\n    getFont() {\n        throw new Error('Method not implemented.');\n    }\n    getName() {\n        throw new Error('Method not implemented.');\n    }\n    setDefaultLanguage() {\n        throw new Error('Method not implemented.');\n    }\n}\n\nconst fetchFont = async (src, options) => {\n    const response = await fetch(src, options);\n    const data = await response.arrayBuffer();\n    return new Uint8Array(data);\n};\nconst isDataUrl = (dataUrl) => {\n    const header = dataUrl.split(',')[0];\n    const hasDataPrefix = header.substring(0, 5) === 'data:';\n    const hasBase64Prefix = header.split(';')[1] === 'base64';\n    return hasDataPrefix && hasBase64Prefix;\n};\nclass FontSource {\n    src;\n    fontFamily;\n    fontStyle;\n    fontWeight;\n    data;\n    options;\n    loadResultPromise;\n    constructor(src, fontFamily, fontStyle, fontWeight, options) {\n        this.src = src;\n        this.fontFamily = fontFamily;\n        this.fontStyle = fontStyle || 'normal';\n        this.fontWeight = fontWeight || 400;\n        this.data = null;\n        this.options = options || {};\n        this.loadResultPromise = null;\n    }\n    async _load() {\n        const { postscriptName } = this.options;\n        let data = null;\n        if (STANDARD_FONTS.includes(this.src)) {\n            data = new StandardFont(this.src);\n        }\n        else if (isDataUrl(this.src)) {\n            const raw = this.src.split(',')[1];\n            const uint8Array = new Uint8Array(atob(raw)\n                .split('')\n                .map((c) => c.charCodeAt(0)));\n            data = fontkit__WEBPACK_IMPORTED_MODULE_1__.create(uint8Array, postscriptName);\n        }\n        else if (is_url__WEBPACK_IMPORTED_MODULE_0__(this.src)) {\n            const { headers, body, method = 'GET' } = this.options;\n            const buffer = await fetchFont(this.src, { method, body, headers });\n            data = fontkit__WEBPACK_IMPORTED_MODULE_1__.create(buffer, postscriptName);\n        }\n        else {\n            data = await fontkit__WEBPACK_IMPORTED_MODULE_1__.open(this.src, postscriptName);\n        }\n        if (data && 'fonts' in data) {\n            throw new Error('Font collection is not supported');\n        }\n        this.data = data;\n    }\n    async load() {\n        if (this.loadResultPromise === null) {\n            this.loadResultPromise = this._load();\n        }\n        return this.loadResultPromise;\n    }\n}\n\nconst FONT_WEIGHTS = {\n    thin: 100,\n    hairline: 100,\n    ultralight: 200,\n    extralight: 200,\n    light: 300,\n    normal: 400,\n    medium: 500,\n    semibold: 600,\n    demibold: 600,\n    bold: 700,\n    ultrabold: 800,\n    extrabold: 800,\n    heavy: 900,\n    black: 900,\n};\nconst resolveFontWeight = (value) => {\n    return typeof value === 'string' ? FONT_WEIGHTS[value] : value;\n};\nconst sortByFontWeight = (a, b) => a.fontWeight - b.fontWeight;\nclass FontFamily {\n    family;\n    sources;\n    static create(family) {\n        return new FontFamily(family);\n    }\n    constructor(family) {\n        this.family = family;\n        this.sources = [];\n    }\n    register({ src, fontWeight, fontStyle, ...options }) {\n        const numericFontWeight = fontWeight\n            ? resolveFontWeight(fontWeight)\n            : undefined;\n        this.sources.push(new FontSource(src, this.family, fontStyle, numericFontWeight, options));\n    }\n    resolve(descriptor) {\n        const { fontWeight = 400, fontStyle = 'normal' } = descriptor;\n        const styleSources = this.sources.filter((s) => s.fontStyle === fontStyle);\n        const exactFit = styleSources.find((s) => s.fontWeight === fontWeight);\n        if (exactFit)\n            return exactFit;\n        // Weight resolution. https://developer.mozilla.org/en-US/docs/Web/CSS/font-weight#Fallback_weights\n        let font = null;\n        const numericFontWeight = resolveFontWeight(fontWeight);\n        if (numericFontWeight >= 400 && numericFontWeight <= 500) {\n            const leftOffset = styleSources.filter((s) => s.fontWeight <= numericFontWeight);\n            const rightOffset = styleSources.filter((s) => s.fontWeight > 500);\n            const fit = styleSources.filter((s) => s.fontWeight >= numericFontWeight && s.fontWeight < 500);\n            font = fit[0] || leftOffset[leftOffset.length - 1] || rightOffset[0];\n        }\n        const lt = styleSources\n            .filter((s) => s.fontWeight < numericFontWeight)\n            .sort(sortByFontWeight);\n        const gt = styleSources\n            .filter((s) => s.fontWeight > numericFontWeight)\n            .sort(sortByFontWeight);\n        if (numericFontWeight < 400) {\n            font = lt[lt.length - 1] || gt[0];\n        }\n        if (numericFontWeight > 500) {\n            font = gt[0] || lt[lt.length - 1];\n        }\n        if (!font) {\n            throw new Error(`Could not resolve font for ${this.family}, fontWeight ${fontWeight}, fontStyle ${fontStyle}`);\n        }\n        return font;\n    }\n}\n\nclass FontStore {\n    fontFamilies = {};\n    emojiSource = null;\n    constructor() {\n        this.register({\n            family: 'Helvetica',\n            fonts: [\n                { src: 'Helvetica', fontStyle: 'normal', fontWeight: 400 },\n                { src: 'Helvetica-Bold', fontStyle: 'normal', fontWeight: 700 },\n                { src: 'Helvetica-Oblique', fontStyle: 'italic', fontWeight: 400 },\n                { src: 'Helvetica-BoldOblique', fontStyle: 'italic', fontWeight: 700 },\n            ],\n        });\n        this.register({\n            family: 'Courier',\n            fonts: [\n                { src: 'Courier', fontStyle: 'normal', fontWeight: 400 },\n                { src: 'Courier-Bold', fontStyle: 'normal', fontWeight: 700 },\n                { src: 'Courier-Oblique', fontStyle: 'italic', fontWeight: 400 },\n                { src: 'Courier-BoldOblique', fontStyle: 'italic', fontWeight: 700 },\n            ],\n        });\n        this.register({\n            family: 'Times-Roman',\n            fonts: [\n                { src: 'Times-Roman', fontStyle: 'normal', fontWeight: 400 },\n                { src: 'Times-Bold', fontStyle: 'normal', fontWeight: 700 },\n                { src: 'Times-Italic', fontStyle: 'italic', fontWeight: 400 },\n                { src: 'Times-BoldItalic', fontStyle: 'italic', fontWeight: 700 },\n            ],\n        });\n        // For backwards compatibility\n        this.register({\n            family: 'Helvetica-Bold',\n            src: 'Helvetica-Bold',\n        });\n        this.register({\n            family: 'Helvetica-Oblique',\n            src: 'Helvetica-Oblique',\n        });\n        this.register({\n            family: 'Helvetica-BoldOblique',\n            src: 'Helvetica-BoldOblique',\n        });\n        this.register({\n            family: 'Courier-Bold',\n            src: 'Courier-Bold',\n        });\n        this.register({\n            family: 'Courier-Oblique',\n            src: 'Courier-Oblique',\n        });\n        this.register({\n            family: 'Courier-BoldOblique',\n            src: 'Courier-BoldOblique',\n        });\n        this.register({\n            family: 'Times-Bold',\n            src: 'Times-Bold',\n        });\n        this.register({\n            family: 'Times-Italic',\n            src: 'Times-Italic',\n        });\n        this.register({\n            family: 'Times-BoldItalic',\n            src: 'Times-BoldItalic',\n        });\n        // Load default fonts\n        this.load({\n            fontFamily: 'Helvetica',\n            fontStyle: 'normal',\n            fontWeight: 400,\n        });\n        this.load({\n            fontFamily: 'Helvetica',\n            fontStyle: 'normal',\n            fontWeight: 700,\n        });\n        this.load({\n            fontFamily: 'Helvetica',\n            fontStyle: 'italic',\n            fontWeight: 400,\n        });\n        this.load({\n            fontFamily: 'Helvetica',\n            fontStyle: 'italic',\n            fontWeight: 700,\n        });\n    }\n    hyphenationCallback = null;\n    register = (data) => {\n        const { family } = data;\n        if (!this.fontFamilies[family]) {\n            this.fontFamilies[family] = FontFamily.create(family);\n        }\n        // Bulk loading\n        if ('fonts' in data) {\n            for (let i = 0; i < data.fonts.length; i += 1) {\n                const { src, fontStyle, fontWeight, ...options } = data.fonts[i];\n                this.fontFamilies[family].register({\n                    src,\n                    fontStyle,\n                    fontWeight,\n                    ...options,\n                });\n            }\n        }\n        else {\n            const { src, fontStyle, fontWeight, ...options } = data;\n            this.fontFamilies[family].register({\n                src,\n                fontStyle,\n                fontWeight,\n                ...options,\n            });\n        }\n    };\n    registerEmojiSource = (emojiSource) => {\n        this.emojiSource = emojiSource;\n    };\n    registerHyphenationCallback = (callback) => {\n        this.hyphenationCallback = callback;\n    };\n    getFont = (descriptor) => {\n        const { fontFamily } = descriptor;\n        if (!this.fontFamilies[fontFamily]) {\n            throw new Error(`Font family not registered: ${fontFamily}. Please register it calling Font.register() method.`);\n        }\n        return this.fontFamilies[fontFamily].resolve(descriptor);\n    };\n    load = async (descriptor) => {\n        const font = this.getFont(descriptor);\n        if (font)\n            await font.load();\n    };\n    reset = () => {\n        const keys = Object.keys(this.fontFamilies);\n        for (let i = 0; i < keys.length; i += 1) {\n            const key = keys[i];\n            for (let j = 0; j < this.fontFamilies[key].sources.length; j++) {\n                const fontSource = this.fontFamilies[key].sources[j];\n                fontSource.data = null;\n            }\n        }\n    };\n    clear = () => {\n        this.fontFamilies = {};\n    };\n    getRegisteredFonts = () => this.fontFamilies;\n    getEmojiSource = () => this.emojiSource;\n    getHyphenationCallback = () => this.hyphenationCallback;\n    getRegisteredFontFamilies = () => Object.keys(this.fontFamilies);\n}\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@react-pdf+font@4.0.2/node_modules/@react-pdf/font/lib/index.js\n");

/***/ })

};
;