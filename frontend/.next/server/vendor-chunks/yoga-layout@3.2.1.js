"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/yoga-layout@3.2.1";
exports.ids = ["vendor-chunks/yoga-layout@3.2.1"];
exports.modules = {

/***/ "(ssr)/./node_modules/.pnpm/yoga-layout@3.2.1/node_modules/yoga-layout/dist/binaries/yoga-wasm-base64-esm.js":
/*!*************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/yoga-layout@3.2.1/node_modules/yoga-layout/dist/binaries/yoga-wasm-base64-esm.js ***!
  \*************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n\nvar loadYoga = (() => {\n  var _scriptDir = \"file:///C:/Users/hp/multiple-disease-prediction/frontend/node_modules/.pnpm/yoga-layout@3.2.1/node_modules/yoga-layout/dist/binaries/yoga-wasm-base64-esm.js\";\n  \n  return (\nfunction(loadYoga) {\n  loadYoga = loadYoga || {};\n\n\nvar h;h||(h=typeof loadYoga !== 'undefined' ? loadYoga : {});var aa,ca;h.ready=new Promise(function(a,b){aa=a;ca=b});var da=Object.assign({},h),q=\"\";\"undefined\"!=typeof document&&document.currentScript&&(q=document.currentScript.src);_scriptDir&&(q=_scriptDir);0!==q.indexOf(\"blob:\")?q=q.substr(0,q.replace(/[?#].*/,\"\").lastIndexOf(\"/\")+1):q=\"\";var ea=h.print||console.log.bind(console),v=h.printErr||console.warn.bind(console);Object.assign(h,da);da=null;var w;h.wasmBinary&&(w=h.wasmBinary);\nvar noExitRuntime=h.noExitRuntime||!0;\"object\"!=typeof WebAssembly&&x(\"no native wasm support detected\");var fa,ha=!1;function z(a,b,c){c=b+c;for(var d=\"\";!(b>=c);){var e=a[b++];if(!e)break;if(e&128){var f=a[b++]&63;if(192==(e&224))d+=String.fromCharCode((e&31)<<6|f);else{var g=a[b++]&63;e=224==(e&240)?(e&15)<<12|f<<6|g:(e&7)<<18|f<<12|g<<6|a[b++]&63;65536>e?d+=String.fromCharCode(e):(e-=65536,d+=String.fromCharCode(55296|e>>10,56320|e&1023))}}else d+=String.fromCharCode(e)}return d}\nvar ia,ja,A,C,ka,D,E,la,ma;function na(){var a=fa.buffer;ia=a;h.HEAP8=ja=new Int8Array(a);h.HEAP16=C=new Int16Array(a);h.HEAP32=D=new Int32Array(a);h.HEAPU8=A=new Uint8Array(a);h.HEAPU16=ka=new Uint16Array(a);h.HEAPU32=E=new Uint32Array(a);h.HEAPF32=la=new Float32Array(a);h.HEAPF64=ma=new Float64Array(a)}var oa,pa=[],qa=[],ra=[];function sa(){var a=h.preRun.shift();pa.unshift(a)}var F=0,ta=null,G=null;\nfunction x(a){if(h.onAbort)h.onAbort(a);a=\"Aborted(\"+a+\")\";v(a);ha=!0;a=new WebAssembly.RuntimeError(a+\". Build with -sASSERTIONS for more info.\");ca(a);throw a;}function ua(a){return a.startsWith(\"data:application/octet-stream;base64,\")}var H;H=\"data:application/octet-stream;base64,\";if(!ua(H)){var va=H;H=h.locateFile?h.locateFile(va,q):q+va}\nfunction wa(){var a=H;try{if(a==H&&w)return new Uint8Array(w);if(ua(a))try{var b=xa(a.slice(37)),c=new Uint8Array(b.length);for(a=0;a<b.length;++a)c[a]=b.charCodeAt(a);var d=c}catch(f){throw Error(\"Converting base64 string to bytes failed.\");}else d=void 0;var e=d;if(e)return e;throw\"both async and sync fetching of the wasm failed\";}catch(f){x(f)}}\nfunction ya(){return w||\"function\"!=typeof fetch?Promise.resolve().then(function(){return wa()}):fetch(H,{credentials:\"same-origin\"}).then(function(a){if(!a.ok)throw\"failed to load wasm binary file at '\"+H+\"'\";return a.arrayBuffer()}).catch(function(){return wa()})}function za(a){for(;0<a.length;)a.shift()(h)}function Aa(a){if(void 0===a)return\"_unknown\";a=a.replace(/[^a-zA-Z0-9_]/g,\"$\");var b=a.charCodeAt(0);return 48<=b&&57>=b?\"_\"+a:a}\nfunction Ba(a,b){a=Aa(a);return function(){return b.apply(this,arguments)}}var J=[{},{value:void 0},{value:null},{value:!0},{value:!1}],Ca=[];function Da(a){var b=Error,c=Ba(a,function(d){this.name=a;this.message=d;d=Error(d).stack;void 0!==d&&(this.stack=this.toString()+\"\\n\"+d.replace(/^Error(:[^\\n]*)?\\n/,\"\"))});c.prototype=Object.create(b.prototype);c.prototype.constructor=c;c.prototype.toString=function(){return void 0===this.message?this.name:this.name+\": \"+this.message};return c}var K=void 0;\nfunction L(a){throw new K(a);}var M=a=>{a||L(\"Cannot use deleted val. handle = \"+a);return J[a].value},Ea=a=>{switch(a){case void 0:return 1;case null:return 2;case !0:return 3;case !1:return 4;default:var b=Ca.length?Ca.pop():J.length;J[b]={ga:1,value:a};return b}},Fa=void 0,Ga=void 0;function N(a){for(var b=\"\";A[a];)b+=Ga[A[a++]];return b}var O=[];function Ha(){for(;O.length;){var a=O.pop();a.M.$=!1;a[\"delete\"]()}}var P=void 0,Q={};\nfunction Ia(a,b){for(void 0===b&&L(\"ptr should not be undefined\");a.R;)b=a.ba(b),a=a.R;return b}var R={};function Ja(a){a=Ka(a);var b=N(a);S(a);return b}function La(a,b){var c=R[a];void 0===c&&L(b+\" has unknown type \"+Ja(a));return c}function Ma(){}var Na=!1;function Oa(a){--a.count.value;0===a.count.value&&(a.T?a.U.W(a.T):a.P.N.W(a.O))}function Pa(a,b,c){if(b===c)return a;if(void 0===c.R)return null;a=Pa(a,b,c.R);return null===a?null:c.na(a)}var Qa={};function Ra(a,b){b=Ia(a,b);return Q[b]}\nvar Sa=void 0;function Ta(a){throw new Sa(a);}function Ua(a,b){b.P&&b.O||Ta(\"makeClassHandle requires ptr and ptrType\");!!b.U!==!!b.T&&Ta(\"Both smartPtrType and smartPtr must be specified\");b.count={value:1};return T(Object.create(a,{M:{value:b}}))}function T(a){if(\"undefined\"===typeof FinalizationRegistry)return T=b=>b,a;Na=new FinalizationRegistry(b=>{Oa(b.M)});T=b=>{var c=b.M;c.T&&Na.register(b,{M:c},b);return b};Ma=b=>{Na.unregister(b)};return T(a)}var Va={};\nfunction Wa(a){for(;a.length;){var b=a.pop();a.pop()(b)}}function Xa(a){return this.fromWireType(D[a>>2])}var U={},Ya={};function V(a,b,c){function d(k){k=c(k);k.length!==a.length&&Ta(\"Mismatched type converter count\");for(var m=0;m<a.length;++m)W(a[m],k[m])}a.forEach(function(k){Ya[k]=b});var e=Array(b.length),f=[],g=0;b.forEach((k,m)=>{R.hasOwnProperty(k)?e[m]=R[k]:(f.push(k),U.hasOwnProperty(k)||(U[k]=[]),U[k].push(()=>{e[m]=R[k];++g;g===f.length&&d(e)}))});0===f.length&&d(e)}\nfunction Za(a){switch(a){case 1:return 0;case 2:return 1;case 4:return 2;case 8:return 3;default:throw new TypeError(\"Unknown type size: \"+a);}}\nfunction W(a,b,c={}){if(!(\"argPackAdvance\"in b))throw new TypeError(\"registerType registeredInstance requires argPackAdvance\");var d=b.name;a||L('type \"'+d+'\" must have a positive integer typeid pointer');if(R.hasOwnProperty(a)){if(c.ua)return;L(\"Cannot register type '\"+d+\"' twice\")}R[a]=b;delete Ya[a];U.hasOwnProperty(a)&&(b=U[a],delete U[a],b.forEach(e=>e()))}function $a(a){L(a.M.P.N.name+\" instance already deleted\")}function X(){}\nfunction ab(a,b,c){if(void 0===a[b].S){var d=a[b];a[b]=function(){a[b].S.hasOwnProperty(arguments.length)||L(\"Function '\"+c+\"' called with an invalid number of arguments (\"+arguments.length+\") - expects one of (\"+a[b].S+\")!\");return a[b].S[arguments.length].apply(this,arguments)};a[b].S=[];a[b].S[d.Z]=d}}\nfunction bb(a,b){h.hasOwnProperty(a)?(L(\"Cannot register public name '\"+a+\"' twice\"),ab(h,a,a),h.hasOwnProperty(void 0)&&L(\"Cannot register multiple overloads of a function with the same number of arguments (undefined)!\"),h[a].S[void 0]=b):h[a]=b}function cb(a,b,c,d,e,f,g,k){this.name=a;this.constructor=b;this.X=c;this.W=d;this.R=e;this.pa=f;this.ba=g;this.na=k;this.ja=[]}\nfunction db(a,b,c){for(;b!==c;)b.ba||L(\"Expected null or instance of \"+c.name+\", got an instance of \"+b.name),a=b.ba(a),b=b.R;return a}function eb(a,b){if(null===b)return this.ea&&L(\"null is not a valid \"+this.name),0;b.M||L('Cannot pass \"'+fb(b)+'\" as a '+this.name);b.M.O||L(\"Cannot pass deleted object as a pointer of type \"+this.name);return db(b.M.O,b.M.P.N,this.N)}\nfunction gb(a,b){if(null===b){this.ea&&L(\"null is not a valid \"+this.name);if(this.da){var c=this.fa();null!==a&&a.push(this.W,c);return c}return 0}b.M||L('Cannot pass \"'+fb(b)+'\" as a '+this.name);b.M.O||L(\"Cannot pass deleted object as a pointer of type \"+this.name);!this.ca&&b.M.P.ca&&L(\"Cannot convert argument of type \"+(b.M.U?b.M.U.name:b.M.P.name)+\" to parameter type \"+this.name);c=db(b.M.O,b.M.P.N,this.N);if(this.da)switch(void 0===b.M.T&&L(\"Passing raw pointer to smart pointer is illegal\"),\nthis.Ba){case 0:b.M.U===this?c=b.M.T:L(\"Cannot convert argument of type \"+(b.M.U?b.M.U.name:b.M.P.name)+\" to parameter type \"+this.name);break;case 1:c=b.M.T;break;case 2:if(b.M.U===this)c=b.M.T;else{var d=b.clone();c=this.xa(c,Ea(function(){d[\"delete\"]()}));null!==a&&a.push(this.W,c)}break;default:L(\"Unsupporting sharing policy\")}return c}\nfunction hb(a,b){if(null===b)return this.ea&&L(\"null is not a valid \"+this.name),0;b.M||L('Cannot pass \"'+fb(b)+'\" as a '+this.name);b.M.O||L(\"Cannot pass deleted object as a pointer of type \"+this.name);b.M.P.ca&&L(\"Cannot convert argument of type \"+b.M.P.name+\" to parameter type \"+this.name);return db(b.M.O,b.M.P.N,this.N)}\nfunction Y(a,b,c,d){this.name=a;this.N=b;this.ea=c;this.ca=d;this.da=!1;this.W=this.xa=this.fa=this.ka=this.Ba=this.wa=void 0;void 0!==b.R?this.toWireType=gb:(this.toWireType=d?eb:hb,this.V=null)}function ib(a,b){h.hasOwnProperty(a)||Ta(\"Replacing nonexistant public symbol\");h[a]=b;h[a].Z=void 0}\nfunction jb(a,b){var c=[];return function(){c.length=0;Object.assign(c,arguments);if(a.includes(\"j\")){var d=h[\"dynCall_\"+a];d=c&&c.length?d.apply(null,[b].concat(c)):d.call(null,b)}else d=oa.get(b).apply(null,c);return d}}function Z(a,b){a=N(a);var c=a.includes(\"j\")?jb(a,b):oa.get(b);\"function\"!=typeof c&&L(\"unknown function pointer with signature \"+a+\": \"+b);return c}var mb=void 0;\nfunction nb(a,b){function c(f){e[f]||R[f]||(Ya[f]?Ya[f].forEach(c):(d.push(f),e[f]=!0))}var d=[],e={};b.forEach(c);throw new mb(a+\": \"+d.map(Ja).join([\", \"]));}\nfunction ob(a,b,c,d,e){var f=b.length;2>f&&L(\"argTypes array size mismatch! Must at least get return value and 'this' types!\");var g=null!==b[1]&&null!==c,k=!1;for(c=1;c<b.length;++c)if(null!==b[c]&&void 0===b[c].V){k=!0;break}var m=\"void\"!==b[0].name,l=f-2,n=Array(l),p=[],r=[];return function(){arguments.length!==l&&L(\"function \"+a+\" called with \"+arguments.length+\" arguments, expected \"+l+\" args!\");r.length=0;p.length=g?2:1;p[0]=e;if(g){var u=b[1].toWireType(r,this);p[1]=u}for(var t=0;t<l;++t)n[t]=\nb[t+2].toWireType(r,arguments[t]),p.push(n[t]);t=d.apply(null,p);if(k)Wa(r);else for(var y=g?1:2;y<b.length;y++){var B=1===y?u:n[y-2];null!==b[y].V&&b[y].V(B)}u=m?b[0].fromWireType(t):void 0;return u}}function pb(a,b){for(var c=[],d=0;d<a;d++)c.push(E[b+4*d>>2]);return c}function qb(a){4<a&&0===--J[a].ga&&(J[a]=void 0,Ca.push(a))}function fb(a){if(null===a)return\"null\";var b=typeof a;return\"object\"===b||\"array\"===b||\"function\"===b?a.toString():\"\"+a}\nfunction rb(a,b){switch(b){case 2:return function(c){return this.fromWireType(la[c>>2])};case 3:return function(c){return this.fromWireType(ma[c>>3])};default:throw new TypeError(\"Unknown float type: \"+a);}}\nfunction sb(a,b,c){switch(b){case 0:return c?function(d){return ja[d]}:function(d){return A[d]};case 1:return c?function(d){return C[d>>1]}:function(d){return ka[d>>1]};case 2:return c?function(d){return D[d>>2]}:function(d){return E[d>>2]};default:throw new TypeError(\"Unknown integer type: \"+a);}}function tb(a,b){for(var c=\"\",d=0;!(d>=b/2);++d){var e=C[a+2*d>>1];if(0==e)break;c+=String.fromCharCode(e)}return c}\nfunction ub(a,b,c){void 0===c&&(c=2147483647);if(2>c)return 0;c-=2;var d=b;c=c<2*a.length?c/2:a.length;for(var e=0;e<c;++e)C[b>>1]=a.charCodeAt(e),b+=2;C[b>>1]=0;return b-d}function vb(a){return 2*a.length}function wb(a,b){for(var c=0,d=\"\";!(c>=b/4);){var e=D[a+4*c>>2];if(0==e)break;++c;65536<=e?(e-=65536,d+=String.fromCharCode(55296|e>>10,56320|e&1023)):d+=String.fromCharCode(e)}return d}\nfunction xb(a,b,c){void 0===c&&(c=2147483647);if(4>c)return 0;var d=b;c=d+c-4;for(var e=0;e<a.length;++e){var f=a.charCodeAt(e);if(55296<=f&&57343>=f){var g=a.charCodeAt(++e);f=65536+((f&1023)<<10)|g&1023}D[b>>2]=f;b+=4;if(b+4>c)break}D[b>>2]=0;return b-d}function yb(a){for(var b=0,c=0;c<a.length;++c){var d=a.charCodeAt(c);55296<=d&&57343>=d&&++c;b+=4}return b}var zb={};function Ab(a){var b=zb[a];return void 0===b?N(a):b}var Bb=[];function Cb(a){var b=Bb.length;Bb.push(a);return b}\nfunction Db(a,b){for(var c=Array(a),d=0;d<a;++d)c[d]=La(E[b+4*d>>2],\"parameter \"+d);return c}var Eb=[],Fb=[null,[],[]];K=h.BindingError=Da(\"BindingError\");h.count_emval_handles=function(){for(var a=0,b=5;b<J.length;++b)void 0!==J[b]&&++a;return a};h.get_first_emval=function(){for(var a=5;a<J.length;++a)if(void 0!==J[a])return J[a];return null};Fa=h.PureVirtualError=Da(\"PureVirtualError\");for(var Gb=Array(256),Hb=0;256>Hb;++Hb)Gb[Hb]=String.fromCharCode(Hb);Ga=Gb;h.getInheritedInstanceCount=function(){return Object.keys(Q).length};\nh.getLiveInheritedInstances=function(){var a=[],b;for(b in Q)Q.hasOwnProperty(b)&&a.push(Q[b]);return a};h.flushPendingDeletes=Ha;h.setDelayFunction=function(a){P=a;O.length&&P&&P(Ha)};Sa=h.InternalError=Da(\"InternalError\");X.prototype.isAliasOf=function(a){if(!(this instanceof X&&a instanceof X))return!1;var b=this.M.P.N,c=this.M.O,d=a.M.P.N;for(a=a.M.O;b.R;)c=b.ba(c),b=b.R;for(;d.R;)a=d.ba(a),d=d.R;return b===d&&c===a};\nX.prototype.clone=function(){this.M.O||$a(this);if(this.M.aa)return this.M.count.value+=1,this;var a=T,b=Object,c=b.create,d=Object.getPrototypeOf(this),e=this.M;a=a(c.call(b,d,{M:{value:{count:e.count,$:e.$,aa:e.aa,O:e.O,P:e.P,T:e.T,U:e.U}}}));a.M.count.value+=1;a.M.$=!1;return a};X.prototype[\"delete\"]=function(){this.M.O||$a(this);this.M.$&&!this.M.aa&&L(\"Object already scheduled for deletion\");Ma(this);Oa(this.M);this.M.aa||(this.M.T=void 0,this.M.O=void 0)};X.prototype.isDeleted=function(){return!this.M.O};\nX.prototype.deleteLater=function(){this.M.O||$a(this);this.M.$&&!this.M.aa&&L(\"Object already scheduled for deletion\");O.push(this);1===O.length&&P&&P(Ha);this.M.$=!0;return this};Y.prototype.qa=function(a){this.ka&&(a=this.ka(a));return a};Y.prototype.ha=function(a){this.W&&this.W(a)};Y.prototype.argPackAdvance=8;Y.prototype.readValueFromPointer=Xa;Y.prototype.deleteObject=function(a){if(null!==a)a[\"delete\"]()};\nY.prototype.fromWireType=function(a){function b(){return this.da?Ua(this.N.X,{P:this.wa,O:c,U:this,T:a}):Ua(this.N.X,{P:this,O:a})}var c=this.qa(a);if(!c)return this.ha(a),null;var d=Ra(this.N,c);if(void 0!==d){if(0===d.M.count.value)return d.M.O=c,d.M.T=a,d.clone();d=d.clone();this.ha(a);return d}d=this.N.pa(c);d=Qa[d];if(!d)return b.call(this);d=this.ca?d.la:d.pointerType;var e=Pa(c,this.N,d.N);return null===e?b.call(this):this.da?Ua(d.N.X,{P:d,O:e,U:this,T:a}):Ua(d.N.X,{P:d,O:e})};\nmb=h.UnboundTypeError=Da(\"UnboundTypeError\");\nvar xa=\"function\"==typeof atob?atob:function(a){var b=\"\",c=0;a=a.replace(/[^A-Za-z0-9\\+\\/=]/g,\"\");do{var d=\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\".indexOf(a.charAt(c++));var e=\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\".indexOf(a.charAt(c++));var f=\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\".indexOf(a.charAt(c++));var g=\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\".indexOf(a.charAt(c++));d=d<<2|e>>4;\ne=(e&15)<<4|f>>2;var k=(f&3)<<6|g;b+=String.fromCharCode(d);64!==f&&(b+=String.fromCharCode(e));64!==g&&(b+=String.fromCharCode(k))}while(c<a.length);return b},Jb={l:function(a,b,c,d){x(\"Assertion failed: \"+(a?z(A,a):\"\")+\", at: \"+[b?b?z(A,b):\"\":\"unknown filename\",c,d?d?z(A,d):\"\":\"unknown function\"])},q:function(a,b,c){a=N(a);b=La(b,\"wrapper\");c=M(c);var d=[].slice,e=b.N,f=e.X,g=e.R.X,k=e.R.constructor;a=Ba(a,function(){e.R.ja.forEach(function(l){if(this[l]===g[l])throw new Fa(\"Pure virtual function \"+\nl+\" must be implemented in JavaScript\");}.bind(this));Object.defineProperty(this,\"__parent\",{value:f});this.__construct.apply(this,d.call(arguments))});f.__construct=function(){this===f&&L(\"Pass correct 'this' to __construct\");var l=k.implement.apply(void 0,[this].concat(d.call(arguments)));Ma(l);var n=l.M;l.notifyOnDestruction();n.aa=!0;Object.defineProperties(this,{M:{value:n}});T(this);l=n.O;l=Ia(e,l);Q.hasOwnProperty(l)?L(\"Tried to register registered instance: \"+l):Q[l]=this};f.__destruct=function(){this===\nf&&L(\"Pass correct 'this' to __destruct\");Ma(this);var l=this.M.O;l=Ia(e,l);Q.hasOwnProperty(l)?delete Q[l]:L(\"Tried to unregister unregistered instance: \"+l)};a.prototype=Object.create(f);for(var m in c)a.prototype[m]=c[m];return Ea(a)},j:function(a){var b=Va[a];delete Va[a];var c=b.fa,d=b.W,e=b.ia,f=e.map(g=>g.ta).concat(e.map(g=>g.za));V([a],f,g=>{var k={};e.forEach((m,l)=>{var n=g[l],p=m.ra,r=m.sa,u=g[l+e.length],t=m.ya,y=m.Aa;k[m.oa]={read:B=>n.fromWireType(p(r,B)),write:(B,ba)=>{var I=[];t(y,\nB,u.toWireType(I,ba));Wa(I)}}});return[{name:b.name,fromWireType:function(m){var l={},n;for(n in k)l[n]=k[n].read(m);d(m);return l},toWireType:function(m,l){for(var n in k)if(!(n in l))throw new TypeError('Missing field:  \"'+n+'\"');var p=c();for(n in k)k[n].write(p,l[n]);null!==m&&m.push(d,p);return p},argPackAdvance:8,readValueFromPointer:Xa,V:d}]})},v:function(){},B:function(a,b,c,d,e){var f=Za(c);b=N(b);W(a,{name:b,fromWireType:function(g){return!!g},toWireType:function(g,k){return k?d:e},argPackAdvance:8,\nreadValueFromPointer:function(g){if(1===c)var k=ja;else if(2===c)k=C;else if(4===c)k=D;else throw new TypeError(\"Unknown boolean type size: \"+b);return this.fromWireType(k[g>>f])},V:null})},f:function(a,b,c,d,e,f,g,k,m,l,n,p,r){n=N(n);f=Z(e,f);k&&(k=Z(g,k));l&&(l=Z(m,l));r=Z(p,r);var u=Aa(n);bb(u,function(){nb(\"Cannot construct \"+n+\" due to unbound types\",[d])});V([a,b,c],d?[d]:[],function(t){t=t[0];if(d){var y=t.N;var B=y.X}else B=X.prototype;t=Ba(u,function(){if(Object.getPrototypeOf(this)!==ba)throw new K(\"Use 'new' to construct \"+\nn);if(void 0===I.Y)throw new K(n+\" has no accessible constructor\");var kb=I.Y[arguments.length];if(void 0===kb)throw new K(\"Tried to invoke ctor of \"+n+\" with invalid number of parameters (\"+arguments.length+\") - expected (\"+Object.keys(I.Y).toString()+\") parameters instead!\");return kb.apply(this,arguments)});var ba=Object.create(B,{constructor:{value:t}});t.prototype=ba;var I=new cb(n,t,ba,r,y,f,k,l);y=new Y(n,I,!0,!1);B=new Y(n+\"*\",I,!1,!1);var lb=new Y(n+\" const*\",I,!1,!0);Qa[a]={pointerType:B,\nla:lb};ib(u,t);return[y,B,lb]})},d:function(a,b,c,d,e,f,g){var k=pb(c,d);b=N(b);f=Z(e,f);V([],[a],function(m){function l(){nb(\"Cannot call \"+n+\" due to unbound types\",k)}m=m[0];var n=m.name+\".\"+b;b.startsWith(\"@@\")&&(b=Symbol[b.substring(2)]);var p=m.N.constructor;void 0===p[b]?(l.Z=c-1,p[b]=l):(ab(p,b,n),p[b].S[c-1]=l);V([],k,function(r){r=ob(n,[r[0],null].concat(r.slice(1)),null,f,g);void 0===p[b].S?(r.Z=c-1,p[b]=r):p[b].S[c-1]=r;return[]});return[]})},p:function(a,b,c,d,e,f){0<b||x();var g=pb(b,\nc);e=Z(d,e);V([],[a],function(k){k=k[0];var m=\"constructor \"+k.name;void 0===k.N.Y&&(k.N.Y=[]);if(void 0!==k.N.Y[b-1])throw new K(\"Cannot register multiple constructors with identical number of parameters (\"+(b-1)+\") for class '\"+k.name+\"'! Overload resolution is currently only performed using the parameter count, not actual type info!\");k.N.Y[b-1]=()=>{nb(\"Cannot construct \"+k.name+\" due to unbound types\",g)};V([],g,function(l){l.splice(1,0,null);k.N.Y[b-1]=ob(m,l,null,e,f);return[]});return[]})},\na:function(a,b,c,d,e,f,g,k){var m=pb(c,d);b=N(b);f=Z(e,f);V([],[a],function(l){function n(){nb(\"Cannot call \"+p+\" due to unbound types\",m)}l=l[0];var p=l.name+\".\"+b;b.startsWith(\"@@\")&&(b=Symbol[b.substring(2)]);k&&l.N.ja.push(b);var r=l.N.X,u=r[b];void 0===u||void 0===u.S&&u.className!==l.name&&u.Z===c-2?(n.Z=c-2,n.className=l.name,r[b]=n):(ab(r,b,p),r[b].S[c-2]=n);V([],m,function(t){t=ob(p,t,l,f,g);void 0===r[b].S?(t.Z=c-2,r[b]=t):r[b].S[c-2]=t;return[]});return[]})},A:function(a,b){b=N(b);W(a,\n{name:b,fromWireType:function(c){var d=M(c);qb(c);return d},toWireType:function(c,d){return Ea(d)},argPackAdvance:8,readValueFromPointer:Xa,V:null})},n:function(a,b,c){c=Za(c);b=N(b);W(a,{name:b,fromWireType:function(d){return d},toWireType:function(d,e){return e},argPackAdvance:8,readValueFromPointer:rb(b,c),V:null})},e:function(a,b,c,d,e){b=N(b);-1===e&&(e=4294967295);e=Za(c);var f=k=>k;if(0===d){var g=32-8*c;f=k=>k<<g>>>g}c=b.includes(\"unsigned\")?function(k,m){return m>>>0}:function(k,m){return m};\nW(a,{name:b,fromWireType:f,toWireType:c,argPackAdvance:8,readValueFromPointer:sb(b,e,0!==d),V:null})},b:function(a,b,c){function d(f){f>>=2;var g=E;return new e(ia,g[f+1],g[f])}var e=[Int8Array,Uint8Array,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array][b];c=N(c);W(a,{name:c,fromWireType:d,argPackAdvance:8,readValueFromPointer:d},{ua:!0})},o:function(a,b){b=N(b);var c=\"std::string\"===b;W(a,{name:b,fromWireType:function(d){var e=E[d>>2],f=d+4;if(c)for(var g=f,k=0;k<=e;++k){var m=\nf+k;if(k==e||0==A[m]){g=g?z(A,g,m-g):\"\";if(void 0===l)var l=g;else l+=String.fromCharCode(0),l+=g;g=m+1}}else{l=Array(e);for(k=0;k<e;++k)l[k]=String.fromCharCode(A[f+k]);l=l.join(\"\")}S(d);return l},toWireType:function(d,e){e instanceof ArrayBuffer&&(e=new Uint8Array(e));var f,g=\"string\"==typeof e;g||e instanceof Uint8Array||e instanceof Uint8ClampedArray||e instanceof Int8Array||L(\"Cannot pass non-string to std::string\");if(c&&g){var k=0;for(f=0;f<e.length;++f){var m=e.charCodeAt(f);127>=m?k++:2047>=\nm?k+=2:55296<=m&&57343>=m?(k+=4,++f):k+=3}f=k}else f=e.length;k=Ib(4+f+1);m=k+4;E[k>>2]=f;if(c&&g){if(g=m,m=f+1,f=A,0<m){m=g+m-1;for(var l=0;l<e.length;++l){var n=e.charCodeAt(l);if(55296<=n&&57343>=n){var p=e.charCodeAt(++l);n=65536+((n&1023)<<10)|p&1023}if(127>=n){if(g>=m)break;f[g++]=n}else{if(2047>=n){if(g+1>=m)break;f[g++]=192|n>>6}else{if(65535>=n){if(g+2>=m)break;f[g++]=224|n>>12}else{if(g+3>=m)break;f[g++]=240|n>>18;f[g++]=128|n>>12&63}f[g++]=128|n>>6&63}f[g++]=128|n&63}}f[g]=0}}else if(g)for(g=\n0;g<f;++g)l=e.charCodeAt(g),255<l&&(S(m),L(\"String has UTF-16 code units that do not fit in 8 bits\")),A[m+g]=l;else for(g=0;g<f;++g)A[m+g]=e[g];null!==d&&d.push(S,k);return k},argPackAdvance:8,readValueFromPointer:Xa,V:function(d){S(d)}})},i:function(a,b,c){c=N(c);if(2===b){var d=tb;var e=ub;var f=vb;var g=()=>ka;var k=1}else 4===b&&(d=wb,e=xb,f=yb,g=()=>E,k=2);W(a,{name:c,fromWireType:function(m){for(var l=E[m>>2],n=g(),p,r=m+4,u=0;u<=l;++u){var t=m+4+u*b;if(u==l||0==n[t>>k])r=d(r,t-r),void 0===\np?p=r:(p+=String.fromCharCode(0),p+=r),r=t+b}S(m);return p},toWireType:function(m,l){\"string\"!=typeof l&&L(\"Cannot pass non-string to C++ string type \"+c);var n=f(l),p=Ib(4+n+b);E[p>>2]=n>>k;e(l,p+4,n+b);null!==m&&m.push(S,p);return p},argPackAdvance:8,readValueFromPointer:Xa,V:function(m){S(m)}})},k:function(a,b,c,d,e,f){Va[a]={name:N(b),fa:Z(c,d),W:Z(e,f),ia:[]}},h:function(a,b,c,d,e,f,g,k,m,l){Va[a].ia.push({oa:N(b),ta:c,ra:Z(d,e),sa:f,za:g,ya:Z(k,m),Aa:l})},C:function(a,b){b=N(b);W(a,{va:!0,name:b,\nargPackAdvance:0,fromWireType:function(){},toWireType:function(){}})},s:function(a,b,c,d,e){a=Bb[a];b=M(b);c=Ab(c);var f=[];E[d>>2]=Ea(f);return a(b,c,f,e)},t:function(a,b,c,d){a=Bb[a];b=M(b);c=Ab(c);a(b,c,null,d)},g:qb,m:function(a,b){var c=Db(a,b),d=c[0];b=d.name+\"_$\"+c.slice(1).map(function(g){return g.name}).join(\"_\")+\"$\";var e=Eb[b];if(void 0!==e)return e;var f=Array(a-1);e=Cb((g,k,m,l)=>{for(var n=0,p=0;p<a-1;++p)f[p]=c[p+1].readValueFromPointer(l+n),n+=c[p+1].argPackAdvance;g=g[k].apply(g,\nf);for(p=0;p<a-1;++p)c[p+1].ma&&c[p+1].ma(f[p]);if(!d.va)return d.toWireType(m,g)});return Eb[b]=e},D:function(a){4<a&&(J[a].ga+=1)},r:function(a){var b=M(a);Wa(b);qb(a)},c:function(){x(\"\")},x:function(a,b,c){A.copyWithin(a,b,b+c)},w:function(a){var b=A.length;a>>>=0;if(2147483648<a)return!1;for(var c=1;4>=c;c*=2){var d=b*(1+.2/c);d=Math.min(d,a+100663296);var e=Math;d=Math.max(a,d);e=e.min.call(e,2147483648,d+(65536-d%65536)%65536);a:{try{fa.grow(e-ia.byteLength+65535>>>16);na();var f=1;break a}catch(g){}f=\nvoid 0}if(f)return!0}return!1},z:function(){return 52},u:function(){return 70},y:function(a,b,c,d){for(var e=0,f=0;f<c;f++){var g=E[b>>2],k=E[b+4>>2];b+=8;for(var m=0;m<k;m++){var l=A[g+m],n=Fb[a];0===l||10===l?((1===a?ea:v)(z(n,0)),n.length=0):n.push(l)}e+=k}E[d>>2]=e;return 0}};\n(function(){function a(e){h.asm=e.exports;fa=h.asm.E;na();oa=h.asm.J;qa.unshift(h.asm.F);F--;h.monitorRunDependencies&&h.monitorRunDependencies(F);0==F&&(null!==ta&&(clearInterval(ta),ta=null),G&&(e=G,G=null,e()))}function b(e){a(e.instance)}function c(e){return ya().then(function(f){return WebAssembly.instantiate(f,d)}).then(function(f){return f}).then(e,function(f){v(\"failed to asynchronously prepare wasm: \"+f);x(f)})}var d={a:Jb};F++;h.monitorRunDependencies&&h.monitorRunDependencies(F);if(h.instantiateWasm)try{return h.instantiateWasm(d,\na)}catch(e){v(\"Module.instantiateWasm callback failed with error: \"+e),ca(e)}(function(){return w||\"function\"!=typeof WebAssembly.instantiateStreaming||ua(H)||\"function\"!=typeof fetch?c(b):fetch(H,{credentials:\"same-origin\"}).then(function(e){return WebAssembly.instantiateStreaming(e,d).then(b,function(f){v(\"wasm streaming compile failed: \"+f);v(\"falling back to ArrayBuffer instantiation\");return c(b)})})})().catch(ca);return{}})();\nh.___wasm_call_ctors=function(){return(h.___wasm_call_ctors=h.asm.F).apply(null,arguments)};var Ka=h.___getTypeName=function(){return(Ka=h.___getTypeName=h.asm.G).apply(null,arguments)};h.__embind_initialize_bindings=function(){return(h.__embind_initialize_bindings=h.asm.H).apply(null,arguments)};var Ib=h._malloc=function(){return(Ib=h._malloc=h.asm.I).apply(null,arguments)},S=h._free=function(){return(S=h._free=h.asm.K).apply(null,arguments)};\nh.dynCall_jiji=function(){return(h.dynCall_jiji=h.asm.L).apply(null,arguments)};var Kb;G=function Lb(){Kb||Mb();Kb||(G=Lb)};\nfunction Mb(){function a(){if(!Kb&&(Kb=!0,h.calledRun=!0,!ha)){za(qa);aa(h);if(h.onRuntimeInitialized)h.onRuntimeInitialized();if(h.postRun)for(\"function\"==typeof h.postRun&&(h.postRun=[h.postRun]);h.postRun.length;){var b=h.postRun.shift();ra.unshift(b)}za(ra)}}if(!(0<F)){if(h.preRun)for(\"function\"==typeof h.preRun&&(h.preRun=[h.preRun]);h.preRun.length;)sa();za(pa);0<F||(h.setStatus?(h.setStatus(\"Running...\"),setTimeout(function(){setTimeout(function(){h.setStatus(\"\")},1);a()},1)):a())}}\nif(h.preInit)for(\"function\"==typeof h.preInit&&(h.preInit=[h.preInit]);0<h.preInit.length;)h.preInit.pop()();Mb();\n\n\n  return loadYoga.ready\n}\n);\n})();\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (loadYoga);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/yoga-layout@3.2.1/node_modules/yoga-layout/dist/binaries/yoga-wasm-base64-esm.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/yoga-layout@3.2.1/node_modules/yoga-layout/dist/src/generated/YGEnums.js":
/*!*****************************************************************************************************!*\
  !*** ./node_modules/.pnpm/yoga-layout@3.2.1/node_modules/yoga-layout/dist/src/generated/YGEnums.js ***!
  \*****************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Align: () => (/* binding */ Align),\n/* harmony export */   BoxSizing: () => (/* binding */ BoxSizing),\n/* harmony export */   Dimension: () => (/* binding */ Dimension),\n/* harmony export */   Direction: () => (/* binding */ Direction),\n/* harmony export */   Display: () => (/* binding */ Display),\n/* harmony export */   Edge: () => (/* binding */ Edge),\n/* harmony export */   Errata: () => (/* binding */ Errata),\n/* harmony export */   ExperimentalFeature: () => (/* binding */ ExperimentalFeature),\n/* harmony export */   FlexDirection: () => (/* binding */ FlexDirection),\n/* harmony export */   Gutter: () => (/* binding */ Gutter),\n/* harmony export */   Justify: () => (/* binding */ Justify),\n/* harmony export */   LogLevel: () => (/* binding */ LogLevel),\n/* harmony export */   MeasureMode: () => (/* binding */ MeasureMode),\n/* harmony export */   NodeType: () => (/* binding */ NodeType),\n/* harmony export */   Overflow: () => (/* binding */ Overflow),\n/* harmony export */   PositionType: () => (/* binding */ PositionType),\n/* harmony export */   Unit: () => (/* binding */ Unit),\n/* harmony export */   Wrap: () => (/* binding */ Wrap),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n// @generated by enums.py\n\nlet Align = /*#__PURE__*/function (Align) {\n  Align[Align[\"Auto\"] = 0] = \"Auto\";\n  Align[Align[\"FlexStart\"] = 1] = \"FlexStart\";\n  Align[Align[\"Center\"] = 2] = \"Center\";\n  Align[Align[\"FlexEnd\"] = 3] = \"FlexEnd\";\n  Align[Align[\"Stretch\"] = 4] = \"Stretch\";\n  Align[Align[\"Baseline\"] = 5] = \"Baseline\";\n  Align[Align[\"SpaceBetween\"] = 6] = \"SpaceBetween\";\n  Align[Align[\"SpaceAround\"] = 7] = \"SpaceAround\";\n  Align[Align[\"SpaceEvenly\"] = 8] = \"SpaceEvenly\";\n  return Align;\n}({});\nlet BoxSizing = /*#__PURE__*/function (BoxSizing) {\n  BoxSizing[BoxSizing[\"BorderBox\"] = 0] = \"BorderBox\";\n  BoxSizing[BoxSizing[\"ContentBox\"] = 1] = \"ContentBox\";\n  return BoxSizing;\n}({});\nlet Dimension = /*#__PURE__*/function (Dimension) {\n  Dimension[Dimension[\"Width\"] = 0] = \"Width\";\n  Dimension[Dimension[\"Height\"] = 1] = \"Height\";\n  return Dimension;\n}({});\nlet Direction = /*#__PURE__*/function (Direction) {\n  Direction[Direction[\"Inherit\"] = 0] = \"Inherit\";\n  Direction[Direction[\"LTR\"] = 1] = \"LTR\";\n  Direction[Direction[\"RTL\"] = 2] = \"RTL\";\n  return Direction;\n}({});\nlet Display = /*#__PURE__*/function (Display) {\n  Display[Display[\"Flex\"] = 0] = \"Flex\";\n  Display[Display[\"None\"] = 1] = \"None\";\n  Display[Display[\"Contents\"] = 2] = \"Contents\";\n  return Display;\n}({});\nlet Edge = /*#__PURE__*/function (Edge) {\n  Edge[Edge[\"Left\"] = 0] = \"Left\";\n  Edge[Edge[\"Top\"] = 1] = \"Top\";\n  Edge[Edge[\"Right\"] = 2] = \"Right\";\n  Edge[Edge[\"Bottom\"] = 3] = \"Bottom\";\n  Edge[Edge[\"Start\"] = 4] = \"Start\";\n  Edge[Edge[\"End\"] = 5] = \"End\";\n  Edge[Edge[\"Horizontal\"] = 6] = \"Horizontal\";\n  Edge[Edge[\"Vertical\"] = 7] = \"Vertical\";\n  Edge[Edge[\"All\"] = 8] = \"All\";\n  return Edge;\n}({});\nlet Errata = /*#__PURE__*/function (Errata) {\n  Errata[Errata[\"None\"] = 0] = \"None\";\n  Errata[Errata[\"StretchFlexBasis\"] = 1] = \"StretchFlexBasis\";\n  Errata[Errata[\"AbsolutePositionWithoutInsetsExcludesPadding\"] = 2] = \"AbsolutePositionWithoutInsetsExcludesPadding\";\n  Errata[Errata[\"AbsolutePercentAgainstInnerSize\"] = 4] = \"AbsolutePercentAgainstInnerSize\";\n  Errata[Errata[\"All\"] = 2147483647] = \"All\";\n  Errata[Errata[\"Classic\"] = 2147483646] = \"Classic\";\n  return Errata;\n}({});\nlet ExperimentalFeature = /*#__PURE__*/function (ExperimentalFeature) {\n  ExperimentalFeature[ExperimentalFeature[\"WebFlexBasis\"] = 0] = \"WebFlexBasis\";\n  return ExperimentalFeature;\n}({});\nlet FlexDirection = /*#__PURE__*/function (FlexDirection) {\n  FlexDirection[FlexDirection[\"Column\"] = 0] = \"Column\";\n  FlexDirection[FlexDirection[\"ColumnReverse\"] = 1] = \"ColumnReverse\";\n  FlexDirection[FlexDirection[\"Row\"] = 2] = \"Row\";\n  FlexDirection[FlexDirection[\"RowReverse\"] = 3] = \"RowReverse\";\n  return FlexDirection;\n}({});\nlet Gutter = /*#__PURE__*/function (Gutter) {\n  Gutter[Gutter[\"Column\"] = 0] = \"Column\";\n  Gutter[Gutter[\"Row\"] = 1] = \"Row\";\n  Gutter[Gutter[\"All\"] = 2] = \"All\";\n  return Gutter;\n}({});\nlet Justify = /*#__PURE__*/function (Justify) {\n  Justify[Justify[\"FlexStart\"] = 0] = \"FlexStart\";\n  Justify[Justify[\"Center\"] = 1] = \"Center\";\n  Justify[Justify[\"FlexEnd\"] = 2] = \"FlexEnd\";\n  Justify[Justify[\"SpaceBetween\"] = 3] = \"SpaceBetween\";\n  Justify[Justify[\"SpaceAround\"] = 4] = \"SpaceAround\";\n  Justify[Justify[\"SpaceEvenly\"] = 5] = \"SpaceEvenly\";\n  return Justify;\n}({});\nlet LogLevel = /*#__PURE__*/function (LogLevel) {\n  LogLevel[LogLevel[\"Error\"] = 0] = \"Error\";\n  LogLevel[LogLevel[\"Warn\"] = 1] = \"Warn\";\n  LogLevel[LogLevel[\"Info\"] = 2] = \"Info\";\n  LogLevel[LogLevel[\"Debug\"] = 3] = \"Debug\";\n  LogLevel[LogLevel[\"Verbose\"] = 4] = \"Verbose\";\n  LogLevel[LogLevel[\"Fatal\"] = 5] = \"Fatal\";\n  return LogLevel;\n}({});\nlet MeasureMode = /*#__PURE__*/function (MeasureMode) {\n  MeasureMode[MeasureMode[\"Undefined\"] = 0] = \"Undefined\";\n  MeasureMode[MeasureMode[\"Exactly\"] = 1] = \"Exactly\";\n  MeasureMode[MeasureMode[\"AtMost\"] = 2] = \"AtMost\";\n  return MeasureMode;\n}({});\nlet NodeType = /*#__PURE__*/function (NodeType) {\n  NodeType[NodeType[\"Default\"] = 0] = \"Default\";\n  NodeType[NodeType[\"Text\"] = 1] = \"Text\";\n  return NodeType;\n}({});\nlet Overflow = /*#__PURE__*/function (Overflow) {\n  Overflow[Overflow[\"Visible\"] = 0] = \"Visible\";\n  Overflow[Overflow[\"Hidden\"] = 1] = \"Hidden\";\n  Overflow[Overflow[\"Scroll\"] = 2] = \"Scroll\";\n  return Overflow;\n}({});\nlet PositionType = /*#__PURE__*/function (PositionType) {\n  PositionType[PositionType[\"Static\"] = 0] = \"Static\";\n  PositionType[PositionType[\"Relative\"] = 1] = \"Relative\";\n  PositionType[PositionType[\"Absolute\"] = 2] = \"Absolute\";\n  return PositionType;\n}({});\nlet Unit = /*#__PURE__*/function (Unit) {\n  Unit[Unit[\"Undefined\"] = 0] = \"Undefined\";\n  Unit[Unit[\"Point\"] = 1] = \"Point\";\n  Unit[Unit[\"Percent\"] = 2] = \"Percent\";\n  Unit[Unit[\"Auto\"] = 3] = \"Auto\";\n  return Unit;\n}({});\nlet Wrap = /*#__PURE__*/function (Wrap) {\n  Wrap[Wrap[\"NoWrap\"] = 0] = \"NoWrap\";\n  Wrap[Wrap[\"Wrap\"] = 1] = \"Wrap\";\n  Wrap[Wrap[\"WrapReverse\"] = 2] = \"WrapReverse\";\n  return Wrap;\n}({});\nconst constants = {\n  ALIGN_AUTO: Align.Auto,\n  ALIGN_FLEX_START: Align.FlexStart,\n  ALIGN_CENTER: Align.Center,\n  ALIGN_FLEX_END: Align.FlexEnd,\n  ALIGN_STRETCH: Align.Stretch,\n  ALIGN_BASELINE: Align.Baseline,\n  ALIGN_SPACE_BETWEEN: Align.SpaceBetween,\n  ALIGN_SPACE_AROUND: Align.SpaceAround,\n  ALIGN_SPACE_EVENLY: Align.SpaceEvenly,\n  BOX_SIZING_BORDER_BOX: BoxSizing.BorderBox,\n  BOX_SIZING_CONTENT_BOX: BoxSizing.ContentBox,\n  DIMENSION_WIDTH: Dimension.Width,\n  DIMENSION_HEIGHT: Dimension.Height,\n  DIRECTION_INHERIT: Direction.Inherit,\n  DIRECTION_LTR: Direction.LTR,\n  DIRECTION_RTL: Direction.RTL,\n  DISPLAY_FLEX: Display.Flex,\n  DISPLAY_NONE: Display.None,\n  DISPLAY_CONTENTS: Display.Contents,\n  EDGE_LEFT: Edge.Left,\n  EDGE_TOP: Edge.Top,\n  EDGE_RIGHT: Edge.Right,\n  EDGE_BOTTOM: Edge.Bottom,\n  EDGE_START: Edge.Start,\n  EDGE_END: Edge.End,\n  EDGE_HORIZONTAL: Edge.Horizontal,\n  EDGE_VERTICAL: Edge.Vertical,\n  EDGE_ALL: Edge.All,\n  ERRATA_NONE: Errata.None,\n  ERRATA_STRETCH_FLEX_BASIS: Errata.StretchFlexBasis,\n  ERRATA_ABSOLUTE_POSITION_WITHOUT_INSETS_EXCLUDES_PADDING: Errata.AbsolutePositionWithoutInsetsExcludesPadding,\n  ERRATA_ABSOLUTE_PERCENT_AGAINST_INNER_SIZE: Errata.AbsolutePercentAgainstInnerSize,\n  ERRATA_ALL: Errata.All,\n  ERRATA_CLASSIC: Errata.Classic,\n  EXPERIMENTAL_FEATURE_WEB_FLEX_BASIS: ExperimentalFeature.WebFlexBasis,\n  FLEX_DIRECTION_COLUMN: FlexDirection.Column,\n  FLEX_DIRECTION_COLUMN_REVERSE: FlexDirection.ColumnReverse,\n  FLEX_DIRECTION_ROW: FlexDirection.Row,\n  FLEX_DIRECTION_ROW_REVERSE: FlexDirection.RowReverse,\n  GUTTER_COLUMN: Gutter.Column,\n  GUTTER_ROW: Gutter.Row,\n  GUTTER_ALL: Gutter.All,\n  JUSTIFY_FLEX_START: Justify.FlexStart,\n  JUSTIFY_CENTER: Justify.Center,\n  JUSTIFY_FLEX_END: Justify.FlexEnd,\n  JUSTIFY_SPACE_BETWEEN: Justify.SpaceBetween,\n  JUSTIFY_SPACE_AROUND: Justify.SpaceAround,\n  JUSTIFY_SPACE_EVENLY: Justify.SpaceEvenly,\n  LOG_LEVEL_ERROR: LogLevel.Error,\n  LOG_LEVEL_WARN: LogLevel.Warn,\n  LOG_LEVEL_INFO: LogLevel.Info,\n  LOG_LEVEL_DEBUG: LogLevel.Debug,\n  LOG_LEVEL_VERBOSE: LogLevel.Verbose,\n  LOG_LEVEL_FATAL: LogLevel.Fatal,\n  MEASURE_MODE_UNDEFINED: MeasureMode.Undefined,\n  MEASURE_MODE_EXACTLY: MeasureMode.Exactly,\n  MEASURE_MODE_AT_MOST: MeasureMode.AtMost,\n  NODE_TYPE_DEFAULT: NodeType.Default,\n  NODE_TYPE_TEXT: NodeType.Text,\n  OVERFLOW_VISIBLE: Overflow.Visible,\n  OVERFLOW_HIDDEN: Overflow.Hidden,\n  OVERFLOW_SCROLL: Overflow.Scroll,\n  POSITION_TYPE_STATIC: PositionType.Static,\n  POSITION_TYPE_RELATIVE: PositionType.Relative,\n  POSITION_TYPE_ABSOLUTE: PositionType.Absolute,\n  UNIT_UNDEFINED: Unit.Undefined,\n  UNIT_POINT: Unit.Point,\n  UNIT_PERCENT: Unit.Percent,\n  UNIT_AUTO: Unit.Auto,\n  WRAP_NO_WRAP: Wrap.NoWrap,\n  WRAP_WRAP: Wrap.Wrap,\n  WRAP_WRAP_REVERSE: Wrap.WrapReverse\n};\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (constants);\n//# sourceMappingURL=YGEnums.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0veW9nYS1sYXlvdXRAMy4yLjEvbm9kZV9tb2R1bGVzL3lvZ2EtbGF5b3V0L2Rpc3Qvc3JjL2dlbmVyYXRlZC9ZR0VudW1zLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRU87QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUMsR0FBRztBQUNHO0FBQ1A7QUFDQTtBQUNBO0FBQ0EsQ0FBQyxHQUFHO0FBQ0c7QUFDUDtBQUNBO0FBQ0E7QUFDQSxDQUFDLEdBQUc7QUFDRztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQyxHQUFHO0FBQ0c7QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUMsR0FBRztBQUNHO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDLEdBQUc7QUFDRztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQyxHQUFHO0FBQ0c7QUFDUDtBQUNBO0FBQ0EsQ0FBQyxHQUFHO0FBQ0c7QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQyxHQUFHO0FBQ0c7QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUMsR0FBRztBQUNHO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDLEdBQUc7QUFDRztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQyxHQUFHO0FBQ0c7QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUMsR0FBRztBQUNHO0FBQ1A7QUFDQTtBQUNBO0FBQ0EsQ0FBQyxHQUFHO0FBQ0c7QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUMsR0FBRztBQUNHO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDLEdBQUc7QUFDRztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDLEdBQUc7QUFDRztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQyxHQUFHO0FBQ0o7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlFQUFlLFNBQVMsRUFBQztBQUN6QiIsInNvdXJjZXMiOlsid2VicGFjazovL2Rpc2Vhc2UtcHJlZGljdGlvbi1mcm9udGVuZC8uL25vZGVfbW9kdWxlcy8ucG5wbS95b2dhLWxheW91dEAzLjIuMS9ub2RlX21vZHVsZXMveW9nYS1sYXlvdXQvZGlzdC9zcmMvZ2VuZXJhdGVkL1lHRW51bXMuanM/ZTc5YSJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIENvcHlyaWdodCAoYykgTWV0YSBQbGF0Zm9ybXMsIEluYy4gYW5kIGFmZmlsaWF0ZXMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKi9cblxuLy8gQGdlbmVyYXRlZCBieSBlbnVtcy5weVxuXG5leHBvcnQgbGV0IEFsaWduID0gLyojX19QVVJFX18qL2Z1bmN0aW9uIChBbGlnbikge1xuICBBbGlnbltBbGlnbltcIkF1dG9cIl0gPSAwXSA9IFwiQXV0b1wiO1xuICBBbGlnbltBbGlnbltcIkZsZXhTdGFydFwiXSA9IDFdID0gXCJGbGV4U3RhcnRcIjtcbiAgQWxpZ25bQWxpZ25bXCJDZW50ZXJcIl0gPSAyXSA9IFwiQ2VudGVyXCI7XG4gIEFsaWduW0FsaWduW1wiRmxleEVuZFwiXSA9IDNdID0gXCJGbGV4RW5kXCI7XG4gIEFsaWduW0FsaWduW1wiU3RyZXRjaFwiXSA9IDRdID0gXCJTdHJldGNoXCI7XG4gIEFsaWduW0FsaWduW1wiQmFzZWxpbmVcIl0gPSA1XSA9IFwiQmFzZWxpbmVcIjtcbiAgQWxpZ25bQWxpZ25bXCJTcGFjZUJldHdlZW5cIl0gPSA2XSA9IFwiU3BhY2VCZXR3ZWVuXCI7XG4gIEFsaWduW0FsaWduW1wiU3BhY2VBcm91bmRcIl0gPSA3XSA9IFwiU3BhY2VBcm91bmRcIjtcbiAgQWxpZ25bQWxpZ25bXCJTcGFjZUV2ZW5seVwiXSA9IDhdID0gXCJTcGFjZUV2ZW5seVwiO1xuICByZXR1cm4gQWxpZ247XG59KHt9KTtcbmV4cG9ydCBsZXQgQm94U2l6aW5nID0gLyojX19QVVJFX18qL2Z1bmN0aW9uIChCb3hTaXppbmcpIHtcbiAgQm94U2l6aW5nW0JveFNpemluZ1tcIkJvcmRlckJveFwiXSA9IDBdID0gXCJCb3JkZXJCb3hcIjtcbiAgQm94U2l6aW5nW0JveFNpemluZ1tcIkNvbnRlbnRCb3hcIl0gPSAxXSA9IFwiQ29udGVudEJveFwiO1xuICByZXR1cm4gQm94U2l6aW5nO1xufSh7fSk7XG5leHBvcnQgbGV0IERpbWVuc2lvbiA9IC8qI19fUFVSRV9fKi9mdW5jdGlvbiAoRGltZW5zaW9uKSB7XG4gIERpbWVuc2lvbltEaW1lbnNpb25bXCJXaWR0aFwiXSA9IDBdID0gXCJXaWR0aFwiO1xuICBEaW1lbnNpb25bRGltZW5zaW9uW1wiSGVpZ2h0XCJdID0gMV0gPSBcIkhlaWdodFwiO1xuICByZXR1cm4gRGltZW5zaW9uO1xufSh7fSk7XG5leHBvcnQgbGV0IERpcmVjdGlvbiA9IC8qI19fUFVSRV9fKi9mdW5jdGlvbiAoRGlyZWN0aW9uKSB7XG4gIERpcmVjdGlvbltEaXJlY3Rpb25bXCJJbmhlcml0XCJdID0gMF0gPSBcIkluaGVyaXRcIjtcbiAgRGlyZWN0aW9uW0RpcmVjdGlvbltcIkxUUlwiXSA9IDFdID0gXCJMVFJcIjtcbiAgRGlyZWN0aW9uW0RpcmVjdGlvbltcIlJUTFwiXSA9IDJdID0gXCJSVExcIjtcbiAgcmV0dXJuIERpcmVjdGlvbjtcbn0oe30pO1xuZXhwb3J0IGxldCBEaXNwbGF5ID0gLyojX19QVVJFX18qL2Z1bmN0aW9uIChEaXNwbGF5KSB7XG4gIERpc3BsYXlbRGlzcGxheVtcIkZsZXhcIl0gPSAwXSA9IFwiRmxleFwiO1xuICBEaXNwbGF5W0Rpc3BsYXlbXCJOb25lXCJdID0gMV0gPSBcIk5vbmVcIjtcbiAgRGlzcGxheVtEaXNwbGF5W1wiQ29udGVudHNcIl0gPSAyXSA9IFwiQ29udGVudHNcIjtcbiAgcmV0dXJuIERpc3BsYXk7XG59KHt9KTtcbmV4cG9ydCBsZXQgRWRnZSA9IC8qI19fUFVSRV9fKi9mdW5jdGlvbiAoRWRnZSkge1xuICBFZGdlW0VkZ2VbXCJMZWZ0XCJdID0gMF0gPSBcIkxlZnRcIjtcbiAgRWRnZVtFZGdlW1wiVG9wXCJdID0gMV0gPSBcIlRvcFwiO1xuICBFZGdlW0VkZ2VbXCJSaWdodFwiXSA9IDJdID0gXCJSaWdodFwiO1xuICBFZGdlW0VkZ2VbXCJCb3R0b21cIl0gPSAzXSA9IFwiQm90dG9tXCI7XG4gIEVkZ2VbRWRnZVtcIlN0YXJ0XCJdID0gNF0gPSBcIlN0YXJ0XCI7XG4gIEVkZ2VbRWRnZVtcIkVuZFwiXSA9IDVdID0gXCJFbmRcIjtcbiAgRWRnZVtFZGdlW1wiSG9yaXpvbnRhbFwiXSA9IDZdID0gXCJIb3Jpem9udGFsXCI7XG4gIEVkZ2VbRWRnZVtcIlZlcnRpY2FsXCJdID0gN10gPSBcIlZlcnRpY2FsXCI7XG4gIEVkZ2VbRWRnZVtcIkFsbFwiXSA9IDhdID0gXCJBbGxcIjtcbiAgcmV0dXJuIEVkZ2U7XG59KHt9KTtcbmV4cG9ydCBsZXQgRXJyYXRhID0gLyojX19QVVJFX18qL2Z1bmN0aW9uIChFcnJhdGEpIHtcbiAgRXJyYXRhW0VycmF0YVtcIk5vbmVcIl0gPSAwXSA9IFwiTm9uZVwiO1xuICBFcnJhdGFbRXJyYXRhW1wiU3RyZXRjaEZsZXhCYXNpc1wiXSA9IDFdID0gXCJTdHJldGNoRmxleEJhc2lzXCI7XG4gIEVycmF0YVtFcnJhdGFbXCJBYnNvbHV0ZVBvc2l0aW9uV2l0aG91dEluc2V0c0V4Y2x1ZGVzUGFkZGluZ1wiXSA9IDJdID0gXCJBYnNvbHV0ZVBvc2l0aW9uV2l0aG91dEluc2V0c0V4Y2x1ZGVzUGFkZGluZ1wiO1xuICBFcnJhdGFbRXJyYXRhW1wiQWJzb2x1dGVQZXJjZW50QWdhaW5zdElubmVyU2l6ZVwiXSA9IDRdID0gXCJBYnNvbHV0ZVBlcmNlbnRBZ2FpbnN0SW5uZXJTaXplXCI7XG4gIEVycmF0YVtFcnJhdGFbXCJBbGxcIl0gPSAyMTQ3NDgzNjQ3XSA9IFwiQWxsXCI7XG4gIEVycmF0YVtFcnJhdGFbXCJDbGFzc2ljXCJdID0gMjE0NzQ4MzY0Nl0gPSBcIkNsYXNzaWNcIjtcbiAgcmV0dXJuIEVycmF0YTtcbn0oe30pO1xuZXhwb3J0IGxldCBFeHBlcmltZW50YWxGZWF0dXJlID0gLyojX19QVVJFX18qL2Z1bmN0aW9uIChFeHBlcmltZW50YWxGZWF0dXJlKSB7XG4gIEV4cGVyaW1lbnRhbEZlYXR1cmVbRXhwZXJpbWVudGFsRmVhdHVyZVtcIldlYkZsZXhCYXNpc1wiXSA9IDBdID0gXCJXZWJGbGV4QmFzaXNcIjtcbiAgcmV0dXJuIEV4cGVyaW1lbnRhbEZlYXR1cmU7XG59KHt9KTtcbmV4cG9ydCBsZXQgRmxleERpcmVjdGlvbiA9IC8qI19fUFVSRV9fKi9mdW5jdGlvbiAoRmxleERpcmVjdGlvbikge1xuICBGbGV4RGlyZWN0aW9uW0ZsZXhEaXJlY3Rpb25bXCJDb2x1bW5cIl0gPSAwXSA9IFwiQ29sdW1uXCI7XG4gIEZsZXhEaXJlY3Rpb25bRmxleERpcmVjdGlvbltcIkNvbHVtblJldmVyc2VcIl0gPSAxXSA9IFwiQ29sdW1uUmV2ZXJzZVwiO1xuICBGbGV4RGlyZWN0aW9uW0ZsZXhEaXJlY3Rpb25bXCJSb3dcIl0gPSAyXSA9IFwiUm93XCI7XG4gIEZsZXhEaXJlY3Rpb25bRmxleERpcmVjdGlvbltcIlJvd1JldmVyc2VcIl0gPSAzXSA9IFwiUm93UmV2ZXJzZVwiO1xuICByZXR1cm4gRmxleERpcmVjdGlvbjtcbn0oe30pO1xuZXhwb3J0IGxldCBHdXR0ZXIgPSAvKiNfX1BVUkVfXyovZnVuY3Rpb24gKEd1dHRlcikge1xuICBHdXR0ZXJbR3V0dGVyW1wiQ29sdW1uXCJdID0gMF0gPSBcIkNvbHVtblwiO1xuICBHdXR0ZXJbR3V0dGVyW1wiUm93XCJdID0gMV0gPSBcIlJvd1wiO1xuICBHdXR0ZXJbR3V0dGVyW1wiQWxsXCJdID0gMl0gPSBcIkFsbFwiO1xuICByZXR1cm4gR3V0dGVyO1xufSh7fSk7XG5leHBvcnQgbGV0IEp1c3RpZnkgPSAvKiNfX1BVUkVfXyovZnVuY3Rpb24gKEp1c3RpZnkpIHtcbiAgSnVzdGlmeVtKdXN0aWZ5W1wiRmxleFN0YXJ0XCJdID0gMF0gPSBcIkZsZXhTdGFydFwiO1xuICBKdXN0aWZ5W0p1c3RpZnlbXCJDZW50ZXJcIl0gPSAxXSA9IFwiQ2VudGVyXCI7XG4gIEp1c3RpZnlbSnVzdGlmeVtcIkZsZXhFbmRcIl0gPSAyXSA9IFwiRmxleEVuZFwiO1xuICBKdXN0aWZ5W0p1c3RpZnlbXCJTcGFjZUJldHdlZW5cIl0gPSAzXSA9IFwiU3BhY2VCZXR3ZWVuXCI7XG4gIEp1c3RpZnlbSnVzdGlmeVtcIlNwYWNlQXJvdW5kXCJdID0gNF0gPSBcIlNwYWNlQXJvdW5kXCI7XG4gIEp1c3RpZnlbSnVzdGlmeVtcIlNwYWNlRXZlbmx5XCJdID0gNV0gPSBcIlNwYWNlRXZlbmx5XCI7XG4gIHJldHVybiBKdXN0aWZ5O1xufSh7fSk7XG5leHBvcnQgbGV0IExvZ0xldmVsID0gLyojX19QVVJFX18qL2Z1bmN0aW9uIChMb2dMZXZlbCkge1xuICBMb2dMZXZlbFtMb2dMZXZlbFtcIkVycm9yXCJdID0gMF0gPSBcIkVycm9yXCI7XG4gIExvZ0xldmVsW0xvZ0xldmVsW1wiV2FyblwiXSA9IDFdID0gXCJXYXJuXCI7XG4gIExvZ0xldmVsW0xvZ0xldmVsW1wiSW5mb1wiXSA9IDJdID0gXCJJbmZvXCI7XG4gIExvZ0xldmVsW0xvZ0xldmVsW1wiRGVidWdcIl0gPSAzXSA9IFwiRGVidWdcIjtcbiAgTG9nTGV2ZWxbTG9nTGV2ZWxbXCJWZXJib3NlXCJdID0gNF0gPSBcIlZlcmJvc2VcIjtcbiAgTG9nTGV2ZWxbTG9nTGV2ZWxbXCJGYXRhbFwiXSA9IDVdID0gXCJGYXRhbFwiO1xuICByZXR1cm4gTG9nTGV2ZWw7XG59KHt9KTtcbmV4cG9ydCBsZXQgTWVhc3VyZU1vZGUgPSAvKiNfX1BVUkVfXyovZnVuY3Rpb24gKE1lYXN1cmVNb2RlKSB7XG4gIE1lYXN1cmVNb2RlW01lYXN1cmVNb2RlW1wiVW5kZWZpbmVkXCJdID0gMF0gPSBcIlVuZGVmaW5lZFwiO1xuICBNZWFzdXJlTW9kZVtNZWFzdXJlTW9kZVtcIkV4YWN0bHlcIl0gPSAxXSA9IFwiRXhhY3RseVwiO1xuICBNZWFzdXJlTW9kZVtNZWFzdXJlTW9kZVtcIkF0TW9zdFwiXSA9IDJdID0gXCJBdE1vc3RcIjtcbiAgcmV0dXJuIE1lYXN1cmVNb2RlO1xufSh7fSk7XG5leHBvcnQgbGV0IE5vZGVUeXBlID0gLyojX19QVVJFX18qL2Z1bmN0aW9uIChOb2RlVHlwZSkge1xuICBOb2RlVHlwZVtOb2RlVHlwZVtcIkRlZmF1bHRcIl0gPSAwXSA9IFwiRGVmYXVsdFwiO1xuICBOb2RlVHlwZVtOb2RlVHlwZVtcIlRleHRcIl0gPSAxXSA9IFwiVGV4dFwiO1xuICByZXR1cm4gTm9kZVR5cGU7XG59KHt9KTtcbmV4cG9ydCBsZXQgT3ZlcmZsb3cgPSAvKiNfX1BVUkVfXyovZnVuY3Rpb24gKE92ZXJmbG93KSB7XG4gIE92ZXJmbG93W092ZXJmbG93W1wiVmlzaWJsZVwiXSA9IDBdID0gXCJWaXNpYmxlXCI7XG4gIE92ZXJmbG93W092ZXJmbG93W1wiSGlkZGVuXCJdID0gMV0gPSBcIkhpZGRlblwiO1xuICBPdmVyZmxvd1tPdmVyZmxvd1tcIlNjcm9sbFwiXSA9IDJdID0gXCJTY3JvbGxcIjtcbiAgcmV0dXJuIE92ZXJmbG93O1xufSh7fSk7XG5leHBvcnQgbGV0IFBvc2l0aW9uVHlwZSA9IC8qI19fUFVSRV9fKi9mdW5jdGlvbiAoUG9zaXRpb25UeXBlKSB7XG4gIFBvc2l0aW9uVHlwZVtQb3NpdGlvblR5cGVbXCJTdGF0aWNcIl0gPSAwXSA9IFwiU3RhdGljXCI7XG4gIFBvc2l0aW9uVHlwZVtQb3NpdGlvblR5cGVbXCJSZWxhdGl2ZVwiXSA9IDFdID0gXCJSZWxhdGl2ZVwiO1xuICBQb3NpdGlvblR5cGVbUG9zaXRpb25UeXBlW1wiQWJzb2x1dGVcIl0gPSAyXSA9IFwiQWJzb2x1dGVcIjtcbiAgcmV0dXJuIFBvc2l0aW9uVHlwZTtcbn0oe30pO1xuZXhwb3J0IGxldCBVbml0ID0gLyojX19QVVJFX18qL2Z1bmN0aW9uIChVbml0KSB7XG4gIFVuaXRbVW5pdFtcIlVuZGVmaW5lZFwiXSA9IDBdID0gXCJVbmRlZmluZWRcIjtcbiAgVW5pdFtVbml0W1wiUG9pbnRcIl0gPSAxXSA9IFwiUG9pbnRcIjtcbiAgVW5pdFtVbml0W1wiUGVyY2VudFwiXSA9IDJdID0gXCJQZXJjZW50XCI7XG4gIFVuaXRbVW5pdFtcIkF1dG9cIl0gPSAzXSA9IFwiQXV0b1wiO1xuICByZXR1cm4gVW5pdDtcbn0oe30pO1xuZXhwb3J0IGxldCBXcmFwID0gLyojX19QVVJFX18qL2Z1bmN0aW9uIChXcmFwKSB7XG4gIFdyYXBbV3JhcFtcIk5vV3JhcFwiXSA9IDBdID0gXCJOb1dyYXBcIjtcbiAgV3JhcFtXcmFwW1wiV3JhcFwiXSA9IDFdID0gXCJXcmFwXCI7XG4gIFdyYXBbV3JhcFtcIldyYXBSZXZlcnNlXCJdID0gMl0gPSBcIldyYXBSZXZlcnNlXCI7XG4gIHJldHVybiBXcmFwO1xufSh7fSk7XG5jb25zdCBjb25zdGFudHMgPSB7XG4gIEFMSUdOX0FVVE86IEFsaWduLkF1dG8sXG4gIEFMSUdOX0ZMRVhfU1RBUlQ6IEFsaWduLkZsZXhTdGFydCxcbiAgQUxJR05fQ0VOVEVSOiBBbGlnbi5DZW50ZXIsXG4gIEFMSUdOX0ZMRVhfRU5EOiBBbGlnbi5GbGV4RW5kLFxuICBBTElHTl9TVFJFVENIOiBBbGlnbi5TdHJldGNoLFxuICBBTElHTl9CQVNFTElORTogQWxpZ24uQmFzZWxpbmUsXG4gIEFMSUdOX1NQQUNFX0JFVFdFRU46IEFsaWduLlNwYWNlQmV0d2VlbixcbiAgQUxJR05fU1BBQ0VfQVJPVU5EOiBBbGlnbi5TcGFjZUFyb3VuZCxcbiAgQUxJR05fU1BBQ0VfRVZFTkxZOiBBbGlnbi5TcGFjZUV2ZW5seSxcbiAgQk9YX1NJWklOR19CT1JERVJfQk9YOiBCb3hTaXppbmcuQm9yZGVyQm94LFxuICBCT1hfU0laSU5HX0NPTlRFTlRfQk9YOiBCb3hTaXppbmcuQ29udGVudEJveCxcbiAgRElNRU5TSU9OX1dJRFRIOiBEaW1lbnNpb24uV2lkdGgsXG4gIERJTUVOU0lPTl9IRUlHSFQ6IERpbWVuc2lvbi5IZWlnaHQsXG4gIERJUkVDVElPTl9JTkhFUklUOiBEaXJlY3Rpb24uSW5oZXJpdCxcbiAgRElSRUNUSU9OX0xUUjogRGlyZWN0aW9uLkxUUixcbiAgRElSRUNUSU9OX1JUTDogRGlyZWN0aW9uLlJUTCxcbiAgRElTUExBWV9GTEVYOiBEaXNwbGF5LkZsZXgsXG4gIERJU1BMQVlfTk9ORTogRGlzcGxheS5Ob25lLFxuICBESVNQTEFZX0NPTlRFTlRTOiBEaXNwbGF5LkNvbnRlbnRzLFxuICBFREdFX0xFRlQ6IEVkZ2UuTGVmdCxcbiAgRURHRV9UT1A6IEVkZ2UuVG9wLFxuICBFREdFX1JJR0hUOiBFZGdlLlJpZ2h0LFxuICBFREdFX0JPVFRPTTogRWRnZS5Cb3R0b20sXG4gIEVER0VfU1RBUlQ6IEVkZ2UuU3RhcnQsXG4gIEVER0VfRU5EOiBFZGdlLkVuZCxcbiAgRURHRV9IT1JJWk9OVEFMOiBFZGdlLkhvcml6b250YWwsXG4gIEVER0VfVkVSVElDQUw6IEVkZ2UuVmVydGljYWwsXG4gIEVER0VfQUxMOiBFZGdlLkFsbCxcbiAgRVJSQVRBX05PTkU6IEVycmF0YS5Ob25lLFxuICBFUlJBVEFfU1RSRVRDSF9GTEVYX0JBU0lTOiBFcnJhdGEuU3RyZXRjaEZsZXhCYXNpcyxcbiAgRVJSQVRBX0FCU09MVVRFX1BPU0lUSU9OX1dJVEhPVVRfSU5TRVRTX0VYQ0xVREVTX1BBRERJTkc6IEVycmF0YS5BYnNvbHV0ZVBvc2l0aW9uV2l0aG91dEluc2V0c0V4Y2x1ZGVzUGFkZGluZyxcbiAgRVJSQVRBX0FCU09MVVRFX1BFUkNFTlRfQUdBSU5TVF9JTk5FUl9TSVpFOiBFcnJhdGEuQWJzb2x1dGVQZXJjZW50QWdhaW5zdElubmVyU2l6ZSxcbiAgRVJSQVRBX0FMTDogRXJyYXRhLkFsbCxcbiAgRVJSQVRBX0NMQVNTSUM6IEVycmF0YS5DbGFzc2ljLFxuICBFWFBFUklNRU5UQUxfRkVBVFVSRV9XRUJfRkxFWF9CQVNJUzogRXhwZXJpbWVudGFsRmVhdHVyZS5XZWJGbGV4QmFzaXMsXG4gIEZMRVhfRElSRUNUSU9OX0NPTFVNTjogRmxleERpcmVjdGlvbi5Db2x1bW4sXG4gIEZMRVhfRElSRUNUSU9OX0NPTFVNTl9SRVZFUlNFOiBGbGV4RGlyZWN0aW9uLkNvbHVtblJldmVyc2UsXG4gIEZMRVhfRElSRUNUSU9OX1JPVzogRmxleERpcmVjdGlvbi5Sb3csXG4gIEZMRVhfRElSRUNUSU9OX1JPV19SRVZFUlNFOiBGbGV4RGlyZWN0aW9uLlJvd1JldmVyc2UsXG4gIEdVVFRFUl9DT0xVTU46IEd1dHRlci5Db2x1bW4sXG4gIEdVVFRFUl9ST1c6IEd1dHRlci5Sb3csXG4gIEdVVFRFUl9BTEw6IEd1dHRlci5BbGwsXG4gIEpVU1RJRllfRkxFWF9TVEFSVDogSnVzdGlmeS5GbGV4U3RhcnQsXG4gIEpVU1RJRllfQ0VOVEVSOiBKdXN0aWZ5LkNlbnRlcixcbiAgSlVTVElGWV9GTEVYX0VORDogSnVzdGlmeS5GbGV4RW5kLFxuICBKVVNUSUZZX1NQQUNFX0JFVFdFRU46IEp1c3RpZnkuU3BhY2VCZXR3ZWVuLFxuICBKVVNUSUZZX1NQQUNFX0FST1VORDogSnVzdGlmeS5TcGFjZUFyb3VuZCxcbiAgSlVTVElGWV9TUEFDRV9FVkVOTFk6IEp1c3RpZnkuU3BhY2VFdmVubHksXG4gIExPR19MRVZFTF9FUlJPUjogTG9nTGV2ZWwuRXJyb3IsXG4gIExPR19MRVZFTF9XQVJOOiBMb2dMZXZlbC5XYXJuLFxuICBMT0dfTEVWRUxfSU5GTzogTG9nTGV2ZWwuSW5mbyxcbiAgTE9HX0xFVkVMX0RFQlVHOiBMb2dMZXZlbC5EZWJ1ZyxcbiAgTE9HX0xFVkVMX1ZFUkJPU0U6IExvZ0xldmVsLlZlcmJvc2UsXG4gIExPR19MRVZFTF9GQVRBTDogTG9nTGV2ZWwuRmF0YWwsXG4gIE1FQVNVUkVfTU9ERV9VTkRFRklORUQ6IE1lYXN1cmVNb2RlLlVuZGVmaW5lZCxcbiAgTUVBU1VSRV9NT0RFX0VYQUNUTFk6IE1lYXN1cmVNb2RlLkV4YWN0bHksXG4gIE1FQVNVUkVfTU9ERV9BVF9NT1NUOiBNZWFzdXJlTW9kZS5BdE1vc3QsXG4gIE5PREVfVFlQRV9ERUZBVUxUOiBOb2RlVHlwZS5EZWZhdWx0LFxuICBOT0RFX1RZUEVfVEVYVDogTm9kZVR5cGUuVGV4dCxcbiAgT1ZFUkZMT1dfVklTSUJMRTogT3ZlcmZsb3cuVmlzaWJsZSxcbiAgT1ZFUkZMT1dfSElEREVOOiBPdmVyZmxvdy5IaWRkZW4sXG4gIE9WRVJGTE9XX1NDUk9MTDogT3ZlcmZsb3cuU2Nyb2xsLFxuICBQT1NJVElPTl9UWVBFX1NUQVRJQzogUG9zaXRpb25UeXBlLlN0YXRpYyxcbiAgUE9TSVRJT05fVFlQRV9SRUxBVElWRTogUG9zaXRpb25UeXBlLlJlbGF0aXZlLFxuICBQT1NJVElPTl9UWVBFX0FCU09MVVRFOiBQb3NpdGlvblR5cGUuQWJzb2x1dGUsXG4gIFVOSVRfVU5ERUZJTkVEOiBVbml0LlVuZGVmaW5lZCxcbiAgVU5JVF9QT0lOVDogVW5pdC5Qb2ludCxcbiAgVU5JVF9QRVJDRU5UOiBVbml0LlBlcmNlbnQsXG4gIFVOSVRfQVVUTzogVW5pdC5BdXRvLFxuICBXUkFQX05PX1dSQVA6IFdyYXAuTm9XcmFwLFxuICBXUkFQX1dSQVA6IFdyYXAuV3JhcCxcbiAgV1JBUF9XUkFQX1JFVkVSU0U6IFdyYXAuV3JhcFJldmVyc2Vcbn07XG5leHBvcnQgZGVmYXVsdCBjb25zdGFudHM7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1ZR0VudW1zLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/yoga-layout@3.2.1/node_modules/yoga-layout/dist/src/generated/YGEnums.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/yoga-layout@3.2.1/node_modules/yoga-layout/dist/src/load.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/.pnpm/yoga-layout@3.2.1/node_modules/yoga-layout/dist/src/load.js ***!
  \****************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Align: () => (/* reexport safe */ _generated_YGEnums_js__WEBPACK_IMPORTED_MODULE_2__.Align),\n/* harmony export */   BoxSizing: () => (/* reexport safe */ _generated_YGEnums_js__WEBPACK_IMPORTED_MODULE_2__.BoxSizing),\n/* harmony export */   Dimension: () => (/* reexport safe */ _generated_YGEnums_js__WEBPACK_IMPORTED_MODULE_2__.Dimension),\n/* harmony export */   Direction: () => (/* reexport safe */ _generated_YGEnums_js__WEBPACK_IMPORTED_MODULE_2__.Direction),\n/* harmony export */   Display: () => (/* reexport safe */ _generated_YGEnums_js__WEBPACK_IMPORTED_MODULE_2__.Display),\n/* harmony export */   Edge: () => (/* reexport safe */ _generated_YGEnums_js__WEBPACK_IMPORTED_MODULE_2__.Edge),\n/* harmony export */   Errata: () => (/* reexport safe */ _generated_YGEnums_js__WEBPACK_IMPORTED_MODULE_2__.Errata),\n/* harmony export */   ExperimentalFeature: () => (/* reexport safe */ _generated_YGEnums_js__WEBPACK_IMPORTED_MODULE_2__.ExperimentalFeature),\n/* harmony export */   FlexDirection: () => (/* reexport safe */ _generated_YGEnums_js__WEBPACK_IMPORTED_MODULE_2__.FlexDirection),\n/* harmony export */   Gutter: () => (/* reexport safe */ _generated_YGEnums_js__WEBPACK_IMPORTED_MODULE_2__.Gutter),\n/* harmony export */   Justify: () => (/* reexport safe */ _generated_YGEnums_js__WEBPACK_IMPORTED_MODULE_2__.Justify),\n/* harmony export */   LogLevel: () => (/* reexport safe */ _generated_YGEnums_js__WEBPACK_IMPORTED_MODULE_2__.LogLevel),\n/* harmony export */   MeasureMode: () => (/* reexport safe */ _generated_YGEnums_js__WEBPACK_IMPORTED_MODULE_2__.MeasureMode),\n/* harmony export */   NodeType: () => (/* reexport safe */ _generated_YGEnums_js__WEBPACK_IMPORTED_MODULE_2__.NodeType),\n/* harmony export */   Overflow: () => (/* reexport safe */ _generated_YGEnums_js__WEBPACK_IMPORTED_MODULE_2__.Overflow),\n/* harmony export */   PositionType: () => (/* reexport safe */ _generated_YGEnums_js__WEBPACK_IMPORTED_MODULE_2__.PositionType),\n/* harmony export */   Unit: () => (/* reexport safe */ _generated_YGEnums_js__WEBPACK_IMPORTED_MODULE_2__.Unit),\n/* harmony export */   Wrap: () => (/* reexport safe */ _generated_YGEnums_js__WEBPACK_IMPORTED_MODULE_2__.Wrap),\n/* harmony export */   loadYoga: () => (/* binding */ loadYoga)\n/* harmony export */ });\n/* harmony import */ var _binaries_yoga_wasm_base64_esm_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../binaries/yoga-wasm-base64-esm.js */ \"(ssr)/./node_modules/.pnpm/yoga-layout@3.2.1/node_modules/yoga-layout/dist/binaries/yoga-wasm-base64-esm.js\");\n/* harmony import */ var _wrapAssembly_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./wrapAssembly.js */ \"(ssr)/./node_modules/.pnpm/yoga-layout@3.2.1/node_modules/yoga-layout/dist/src/wrapAssembly.js\");\n/* harmony import */ var _generated_YGEnums_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./generated/YGEnums.js */ \"(ssr)/./node_modules/.pnpm/yoga-layout@3.2.1/node_modules/yoga-layout/dist/src/generated/YGEnums.js\");\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n */\n\n// @ts-ignore untyped from Emscripten\n\n\nasync function loadYoga() {\n  return (0,_wrapAssembly_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(await (0,_binaries_yoga_wasm_base64_esm_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])());\n}\n\n//# sourceMappingURL=load.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0veW9nYS1sYXlvdXRAMy4yLjEvbm9kZV9tb2R1bGVzL3lvZ2EtbGF5b3V0L2Rpc3Qvc3JjL2xvYWQuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDK0Q7QUFDbEI7QUFDdEM7QUFDUCxTQUFTLDREQUFZLE9BQU8sNkVBQVk7QUFDeEM7QUFDdUM7QUFDdkMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9kaXNlYXNlLXByZWRpY3Rpb24tZnJvbnRlbmQvLi9ub2RlX21vZHVsZXMvLnBucG0veW9nYS1sYXlvdXRAMy4yLjEvbm9kZV9tb2R1bGVzL3lvZ2EtbGF5b3V0L2Rpc3Qvc3JjL2xvYWQuanM/MzNmMiJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIENvcHlyaWdodCAoYykgTWV0YSBQbGF0Zm9ybXMsIEluYy4gYW5kIGFmZmlsaWF0ZXMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKlxuICogQGZvcm1hdFxuICovXG5cbi8vIEB0cy1pZ25vcmUgdW50eXBlZCBmcm9tIEVtc2NyaXB0ZW5cbmltcG9ydCBsb2FkWW9nYUltcGwgZnJvbSAnLi4vYmluYXJpZXMveW9nYS13YXNtLWJhc2U2NC1lc20uanMnO1xuaW1wb3J0IHdyYXBBc3NlbWJseSBmcm9tIFwiLi93cmFwQXNzZW1ibHkuanNcIjtcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBsb2FkWW9nYSgpIHtcbiAgcmV0dXJuIHdyYXBBc3NlbWJseShhd2FpdCBsb2FkWW9nYUltcGwoKSk7XG59XG5leHBvcnQgKiBmcm9tIFwiLi9nZW5lcmF0ZWQvWUdFbnVtcy5qc1wiO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9bG9hZC5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/yoga-layout@3.2.1/node_modules/yoga-layout/dist/src/load.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/yoga-layout@3.2.1/node_modules/yoga-layout/dist/src/wrapAssembly.js":
/*!************************************************************************************************!*\
  !*** ./node_modules/.pnpm/yoga-layout@3.2.1/node_modules/yoga-layout/dist/src/wrapAssembly.js ***!
  \************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ wrapAssembly)\n/* harmony export */ });\n/* harmony import */ var _generated_YGEnums_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./generated/YGEnums.js */ \"(ssr)/./node_modules/.pnpm/yoga-layout@3.2.1/node_modules/yoga-layout/dist/src/generated/YGEnums.js\");\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n */\n\n// @ts-nocheck\n\n\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction wrapAssembly(lib) {\n  function patch(prototype, name, fn) {\n    const original = prototype[name];\n    prototype[name] = function () {\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n      return fn.call(this, original, ...args);\n    };\n  }\n  for (const fnName of ['setPosition', 'setMargin', 'setFlexBasis', 'setWidth', 'setHeight', 'setMinWidth', 'setMinHeight', 'setMaxWidth', 'setMaxHeight', 'setPadding', 'setGap']) {\n    const methods = {\n      [_generated_YGEnums_js__WEBPACK_IMPORTED_MODULE_0__.Unit.Point]: lib.Node.prototype[fnName],\n      [_generated_YGEnums_js__WEBPACK_IMPORTED_MODULE_0__.Unit.Percent]: lib.Node.prototype[`${fnName}Percent`],\n      [_generated_YGEnums_js__WEBPACK_IMPORTED_MODULE_0__.Unit.Auto]: lib.Node.prototype[`${fnName}Auto`]\n    };\n    patch(lib.Node.prototype, fnName, function (original) {\n      for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n        args[_key2 - 1] = arguments[_key2];\n      }\n      // We patch all these functions to add support for the following calls:\n      // .setWidth(100) / .setWidth(\"100%\") / .setWidth(.getWidth()) / .setWidth(\"auto\")\n\n      const value = args.pop();\n      let unit, asNumber;\n      if (value === 'auto') {\n        unit = _generated_YGEnums_js__WEBPACK_IMPORTED_MODULE_0__.Unit.Auto;\n        asNumber = undefined;\n      } else if (typeof value === 'object') {\n        unit = value.unit;\n        asNumber = value.valueOf();\n      } else {\n        unit = typeof value === 'string' && value.endsWith('%') ? _generated_YGEnums_js__WEBPACK_IMPORTED_MODULE_0__.Unit.Percent : _generated_YGEnums_js__WEBPACK_IMPORTED_MODULE_0__.Unit.Point;\n        asNumber = parseFloat(value);\n        if (value !== undefined && !Number.isNaN(value) && Number.isNaN(asNumber)) {\n          throw new Error(`Invalid value ${value} for ${fnName}`);\n        }\n      }\n      if (!methods[unit]) throw new Error(`Failed to execute \"${fnName}\": Unsupported unit '${value}'`);\n      if (asNumber !== undefined) {\n        return methods[unit].call(this, ...args, asNumber);\n      } else {\n        return methods[unit].call(this, ...args);\n      }\n    });\n  }\n  function wrapMeasureFunction(measureFunction) {\n    return lib.MeasureCallback.implement({\n      measure: function () {\n        const {\n          width,\n          height\n        } = measureFunction(...arguments);\n        return {\n          width: width ?? NaN,\n          height: height ?? NaN\n        };\n      }\n    });\n  }\n  patch(lib.Node.prototype, 'setMeasureFunc', function (original, measureFunc) {\n    // This patch is just a convenience patch, since it helps write more\n    // idiomatic source code (such as .setMeasureFunc(null))\n    if (measureFunc) {\n      return original.call(this, wrapMeasureFunction(measureFunc));\n    } else {\n      return this.unsetMeasureFunc();\n    }\n  });\n  function wrapDirtiedFunc(dirtiedFunction) {\n    return lib.DirtiedCallback.implement({\n      dirtied: dirtiedFunction\n    });\n  }\n  patch(lib.Node.prototype, 'setDirtiedFunc', function (original, dirtiedFunc) {\n    original.call(this, wrapDirtiedFunc(dirtiedFunc));\n  });\n  patch(lib.Config.prototype, 'free', function () {\n    // Since we handle the memory allocation ourselves (via lib.Config.create),\n    // we also need to handle the deallocation\n    lib.Config.destroy(this);\n  });\n  patch(lib.Node, 'create', (_, config) => {\n    // We decide the constructor we want to call depending on the parameters\n    return config ? lib.Node.createWithConfig(config) : lib.Node.createDefault();\n  });\n  patch(lib.Node.prototype, 'free', function () {\n    // Since we handle the memory allocation ourselves (via lib.Node.create),\n    // we also need to handle the deallocation\n    lib.Node.destroy(this);\n  });\n  patch(lib.Node.prototype, 'freeRecursive', function () {\n    for (let t = 0, T = this.getChildCount(); t < T; ++t) {\n      this.getChild(0).freeRecursive();\n    }\n    this.free();\n  });\n  patch(lib.Node.prototype, 'calculateLayout', function (original) {\n    let width = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : NaN;\n    let height = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : NaN;\n    let direction = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : _generated_YGEnums_js__WEBPACK_IMPORTED_MODULE_0__.Direction.LTR;\n    // Just a small patch to add support for the function default parameters\n    return original.call(this, width, height, direction);\n  });\n  return {\n    Config: lib.Config,\n    Node: lib.Node,\n    ..._generated_YGEnums_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"]\n  };\n}\n//# sourceMappingURL=wrapAssembly.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/yoga-layout@3.2.1/node_modules/yoga-layout/dist/src/wrapAssembly.js\n");

/***/ })

};
;